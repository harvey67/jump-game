{"version":3,"sources":["img/potter.png","Flappy.js","img/dora1.png","img/doraLeft.png","img/doraRight.png","img/floor.png","img/floorBad.png","img/forest.png","snd/backgroundMusic.mp3","snd/gameOver.mp3","snd/pop.mp3","snd/fall.mp3","Dora.js","App.js","reportWebVitals.js","index.js"],"names":["CANVAS_HEIGHT","CANVAS_WIDTH","SPEED","ANSWER","SCORE","SHOW_RESULTS","randomNum","a","b","Math","floor","random","Game","this","gameState","Player","width","height","position","x","y","transform","gravityDeceleration","jumpBoost","stop","rotation","direction","ctx","save","sin","PI","cos","imgSrc","document","getElementById","drawImage","restore","deltaTime","Obstacle","tops","heights","speed","positionX","window","correct","answerCorrect","answerIncorrect","i","length","fillStyle","fillRect","font","fillText","create","innerHTML","Flappy","startGame","console","log","game","btns","getElementsByClassName","disabled","player","addEventListener","event","key","jump","canvas","getContext","draw","allObstacles","requestAnimationFrame","timestamp","gameLoop","useEffect","lastTime","deltatime","clearRect","update","passed","collisionCheck","style","display","className","id","paddingRight","onClick","setTimeout","alt","src","potter","BlockGood","factor","answer","img","loaded","e","txt","BlockBad","hit","colour","imgGood","imgBad","Menu","rect","fill","textAlign","imageStill","imageLeft","imageRight","image","movement","gravity","gravitySpeed","onPlatform","buffer","score","printTest","goodBlocks","badBlocks","menu","abs","tmp","Audio","jumpSFX","play","pause","fallSFX","Dora","backgroundLoaded","background","backgroundMusic","loop","lastBlockX","lastBlockY","block","xVar","push","intersects","c","moveLeft","moveRight","controls","gameOverMusic","dora1","doraRight","doraLeft","floorBad","backgroundImage","location","reload","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iQAAe,MAA0B,mC,OCInCA,EAAgB,IAChBC,EAAe,IAMjBC,EAAQ,EACRC,EAAS,EACTC,EAAQ,EACRC,GAAe,EAGnB,SAASC,EAAUC,EAAGC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAAKD,E,IAGrCK,EACF,aAAe,oBACXC,KAAKC,UAAY,GAInBC,E,WACF,aAAe,oBACXF,KAAKG,MAAQ,IACbH,KAAKI,OAAS,IACdJ,KAAKK,SAAW,CACZC,EAvBI,IAwBJC,EAAG,KAEPP,KAAKQ,UAAY,CACbF,EA3BI,IA4BJC,EAAG,KAEPP,KAAKS,oBAAsB,EAC3BT,KAAKU,UAAY,EACjBV,KAAKW,KAAO,EACZX,KAAKY,SAAW,EAChBZ,KAAKa,UAAY,E,wCAGrB,SAAKC,GACDA,EAAIC,OAKJf,KAAKY,UAAYZ,KAAKa,UACtBb,KAAKa,WAAa,GACdb,KAAKa,UAAY,IACjBb,KAAKa,UAAY,GAKjBb,KAAKY,SAVM,KAWXZ,KAAKY,SAXM,IAaXZ,KAAKY,UAdI,KAeTZ,KAAKY,UAfI,IAkBb,IAAII,EAAMpB,KAAKoB,IAAIhB,KAAKY,SAAWhB,KAAKqB,GAAK,KACzCC,EAAMtB,KAAKsB,IAAIlB,KAAKY,SAAWhB,KAAKqB,GAAK,KAC7CH,EAAIN,UAAUU,EAAKF,GAAMA,EAAKE,EAAKlB,KAAKQ,UAAUF,EAAIN,KAAKG,MAAMe,EAAI,EAAGlB,KAAKQ,UAAUD,GAKvF,IAAIY,EAASC,SAASC,eAAe,YACrCP,EAAIQ,UAAUH,EAAQ,EAAG,EAAGnB,KAAKG,MAAOH,KAAKI,QAC7CU,EAAIS,Y,oBAIR,SAAOC,GACHxB,KAAKS,qBA1EG,GA2ERT,KAAKQ,UAAUD,GAAKP,KAAKS,sB,kBAG7B,WACIT,KAAKS,qBAAuB,EAC5BT,KAAKa,WAAa,M,KAIpBY,E,WACF,aAAe,oBACXzB,KAAK0B,KAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAC5B1B,KAAK2B,QAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAChC3B,KAAK4B,MAAQ,GACb5B,KAAK6B,UAAYzC,EACjBY,KAAK8B,OAAS,IACd9B,KAAK+B,QAAU,E,0CAGnB,WACI/B,KAAK0B,KAAK,GAAK,EACf1B,KAAK0B,KAAK,GAAKjC,EAAUN,GAAmBA,KAC5Ca,KAAK0B,KAAK,GAAK1B,KAAK0B,KAAK,GAAK1B,KAAK8B,OACnC9B,KAAK0B,KAAK,GAAK1B,KAAK0B,KAAK,GAAKjC,EAAUN,GAAmBA,KAC3Da,KAAK0B,KAAK,GAAK1B,KAAK0B,KAAK,GAAK1B,KAAK8B,OACnC9B,KAAK+B,QAAU,EAAI,GAAGtC,EAAU,EAAG,GAAG,GAEtCO,KAAKgC,cAAgB1C,EAASG,EAAU,EAAG,GAC3CO,KAAKiC,gBAAkB3C,EAASG,EAAU,EAAG,GAAKA,EAAU,EAAGH,EAAO,K,kBAG1E,SAAKwB,GACD,IAAK,IAAIoB,EAAI,EAAGA,EAAIlC,KAAK0B,KAAKS,OAAQD,IAClCpB,EAAIsB,UAAY,qBACN,IAANF,GAAiB,IAANA,IACXpB,EAAIsB,UAAY,QACZ5C,IACAsB,EAAIsB,UAAY,QAGpBF,IAAMlC,KAAK+B,SAAWvC,IACtBsB,EAAIsB,UAAY,SAEhBF,EAAE,EAAIlC,KAAK0B,KAAKS,OAChBrB,EAAIuB,SAASrC,KAAK6B,UAAW7B,KAAK0B,KAAKQ,GAtHhC,GAsHoDlC,KAAK0B,KAAKQ,EAAE,GAAKlC,KAAK0B,KAAKQ,IAEtFpB,EAAIuB,SAASrC,KAAK6B,UAAW7B,KAAK0B,KAAKQ,GAxHhC,GAwHoD/C,EAAgBa,KAAK0B,KAAKQ,IAI/E,IAANA,GAAiB,IAANA,IACXpB,EAAIsB,UAAY,OAChBtB,EAAIwB,KAAO,eACPJ,IAAMlC,KAAK+B,QACXjB,EAAIyB,SAASvC,KAAKgC,cAAehC,KAAK6B,UAAW7B,KAAK0B,KAAKQ,GAAKlC,KAAK8B,OAAO,GAE5EhB,EAAIyB,SAASvC,KAAKiC,gBAAiBjC,KAAK6B,UAAW7B,KAAK0B,KAAKQ,GAAKlC,KAAK8B,OAAO,M,oBAM9F,SAAON,GACHxB,KAAK6B,WAAaxC,EACdW,KAAK6B,UA1IM,GA0IuB,IAClC7B,KAAK6B,UAAYzC,EACjBY,KAAKwC,UAETjD,GAASF,EACT+B,SAASC,eAAe,WAAWoB,UAAY,UAAYlD,M,KAgLpDmD,EA3KA,WAAM,SA6BFC,IA7BE,2EA6BjB,wCAAAjD,EAAA,sDASI,IARAkD,QAAQC,IAAI,4BAA8BxD,IAItCyD,EAAO,IAAI/C,GACVE,UAAY,EAEb8C,EAAO3B,SAAS4B,uBAAuB,YAClCd,EAAI,EAAGA,EAAIa,EAAKZ,OAAQD,IAC7Ba,EAAKb,GAAGe,UAAW,EAGnBC,EAAS,IAAIhD,EACjBkB,SAAS+B,iBAAiB,WAAW,SAAAC,GACjC,OAAQA,EAAMC,KACV,IAAK,YAEDT,QAAQC,IAAI,QACZ,MACJ,IAAK,aACDD,QAAQC,IAAI,SACZ,MACJ,IAAK,IAEDK,EAAOI,WAMnBlC,SAAS+B,iBAAiB,SAAS,SAAAC,GAC/B,OAAQA,EAAMC,KACV,IAAK,YAEDT,QAAQC,IAAI,QACZ,MACJ,IAAK,aACDD,QAAQC,IAAI,cAMpBU,EAASnC,SAASC,eAAe,eAC9B8B,iBAAiB,SAAS,WAAaD,EAAOI,UACjDxC,EAAMyC,EAAOC,WAAW,MAC5BN,EAAOO,KAAK3C,IAER4C,EAAe,IAAIjC,GACVe,SAGbmB,uBACI,SAASC,GACLC,EAASD,EAAW9C,EAAKgC,EAAMI,EAAQQ,MAvDnD,6CA7BiB,sBAEjBI,qBAAU,eA4FV,IAAIC,EAAW,EACf,SAASF,EAASD,EAAW9C,EAAKgC,EAAMI,EAAQQ,GAC5C,GAAuB,IAAnBZ,EAAK7C,UAAiB,CAEtB,IAAI+D,EAAYJ,EAAYG,EAC5BA,EAAWH,EACX9C,EAAImD,UAAU,EAAG,EAAG7E,EAAcD,GAClC2B,EAAIwB,KAAO,eACXxB,EAAIyB,SAAS,gBAAkBjD,EAAQF,IAAkBD,KAEzDuE,EAAaQ,OAAOF,GACpBN,EAAaD,KAAK3C,GAElBoC,EAAOgB,OAAOF,GACdd,EAAOO,KAAK3C,GAEZ6C,uBACI,SAASC,GACLC,EAASD,EAAW9C,EAAKgC,EAAMI,EAAQQ,MA3GvD,SAAwBZ,EAAMI,EAAQQ,EAAc5C,GAC5CoC,EAAO1C,UAAUD,EAAIpB,IACrB+D,EAAO1C,UAAUD,EAAIpB,EACrB2D,EAAK7C,WAAa,GAGtB,IAAIkE,GAAS,EACTjB,EAAO1C,UAAUF,EAAI4C,EAAO/C,MAAQuD,EAAa7B,WAC9CqB,EAAO1C,UAAUF,EAAIoD,EAAa7B,UAjK1B,KAkKPsC,GAAS,EACLjB,EAAO1C,UAAUD,EAAI2C,EAAO9C,OAASsD,EAAahC,KAAKgC,EAAa3B,UACjEmB,EAAO1C,UAAUD,EAAImD,EAAahC,KAAKgC,EAAa3B,SAAW2B,EAAa5B,SAC3EqC,GAAS,KAGV,IAAXA,IACArB,EAAK7C,WAAa,EAClBT,GAAe,EACfkE,EAAaD,KAAK3C,IA6FlBsD,CAAetB,EAAMI,EAAQQ,EAAc5C,OAExC,CACH8B,QAAQC,IAAI,aACZzB,SAASC,eAAe,YAAYgD,MAAMC,QAAU,QAEpD,IADA,IAAIvB,EAAO3B,SAAS4B,uBAAuB,YAClCd,EAAI,EAAGA,EAAIa,EAAKZ,OAAQD,IAC7Ba,EAAKb,GAAGe,UAAW,GA8B/B,OACI,sBAAKsB,UAAU,SAAf,UACI,oBAAIC,GAAG,aAAaH,MAAO,CAACC,QAAS,SAAUG,aAAa,SAA5D,sBACA,oBAAID,GAAG,UAAUH,MAAO,CAACC,QAAS,UAAlC,sBACA,uBACA,uBACA,wBAAQE,GAAG,aAAarE,MAAM,MAAMC,OAAO,QAC3C,uBACA,wBAAQoE,GAAG,WAAWE,QAjC9B,WACInF,EAAQ,EACRqD,QAAQC,IAAI,SACZzB,SAASC,eAAe,YAAYgD,MAAMC,QAAU,OACpD9E,GAAe,EA1CfF,EAASG,EAAU,EAAG,IACtB2B,SAASC,eAAe,cAAcoB,UAAY,4CAA8CnD,EAAS,IA2CzGqF,WAAWhC,EAAW,MA2BlB,yBACA,mBAAG6B,GAAG,WACN,wBAAQD,UAAU,WAAWG,QA1BrC,aACIrF,EACY,IACRA,EAAQ,GAEZ+B,SAASC,eAAe,WAAWoB,UAAY,UAAYpD,GAqBFgF,MAAO,CAACC,QAAS,UAAtE,eACA,mBAAGE,GAAG,UAAUH,MAAO,CAACC,QAAS,UAAjC,sBACA,wBAAQC,UAAU,WAAWG,QApBrC,aACIrF,EACY,KACRA,EAAQ,IAEZ+B,SAASC,eAAe,WAAWoB,UAAY,UAAYpD,GAeFgF,MAAO,CAACC,QAAS,UAAtE,eACA,qBAAKE,GAAG,WAAWI,IAAI,SAASC,IAAKC,EAAQT,MAAO,CAACC,QAAQ,cClU1D,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,kCCA1B,MAA0B,qCCA1B,MAA0B,mCCA1B,MAA0B,4CCA1B,MAA0B,qCCA1B,MAA0B,gCCA1B,MAA0B,iCCanCnF,EAAgB,IAChBC,EAAe,IAEf2F,E,WACJ,WAAYC,GAAS,oBACnBhF,KAAKG,MAAQ,IACbH,KAAKI,OAAS,GACdJ,KAAKK,SAAW,CACdC,EAAG,EACHC,EAAG,GAELP,KAAKiF,QAAUrF,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAAKkF,EACrDhF,KAAKkF,IAAM9D,SAASC,eAAe,SACnCrB,KAAKmF,OAAS,E,wCAGhB,SAAKrE,GAAM,IAAD,OAQR,GAJAd,KAAKkF,IAAI/B,iBAAiB,QAAQ,SAAAiC,GAChCtE,EAAIQ,UAAU,EAAK4D,IAAK,EAAK7E,SAASC,EAAG,EAAKD,SAASE,EAAG,EAAKJ,MAAO,EAAKC,QAC3E,EAAK+E,QAAU,KAEG,IAAhBnF,KAAKmF,OAAc,CACrBrE,EAAIQ,UAAUtB,KAAKkF,IAAKlF,KAAKK,SAASC,EAAGN,KAAKK,SAASE,EAAGP,KAAKG,MAAOH,KAAKI,QAC3E,IAAIiF,EAAMrF,KAAKiF,OACfnE,EAAIwB,KAAQtC,KAAKI,OAAO,GAAM,WAC9BU,EAAIsB,UAAY,QAChBtB,EAAIyB,SAAS8C,EAAKrF,KAAKK,SAASC,EAAI,GAAIN,KAAKK,SAASE,EAAI,S,KAK1D+E,E,WACJ,WAAYN,GAAS,oBACnBhF,KAAKG,MAAQ,IACbH,KAAKI,OAAS,GACdJ,KAAKwE,GAAK,EACVxE,KAAKuF,IAAM,EACXvF,KAAKK,SAAW,CACdC,EAAG,EACHC,EAAG,GAELP,KAAKwF,OAAS,eACdxF,KAAKiF,QAAUrF,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAAKkF,EAASpF,KAAKC,MAAMD,KAAKE,UAAYkF,EAAO,GAAK,GACtGhF,KAAKyF,QAAUrE,SAASC,eAAe,SACvCrB,KAAK0F,OAAStE,SAASC,eAAe,YACtCrB,KAAKkF,IAAMlF,KAAKyF,QAChBzF,KAAKmF,OAAS,E,wCAGhB,SAAKrE,GAAM,IAAD,OAKR,GAJAd,KAAKkF,IAAI/B,iBAAiB,QAAQ,SAAAiC,GAChCtE,EAAIQ,UAAU,EAAK4D,IAAK,EAAK7E,SAASC,EAAG,EAAKD,SAASE,EAAG,EAAKJ,MAAO,EAAKC,QAC3E,EAAK+E,QAAU,KAEG,IAAhBnF,KAAKmF,OAAc,CACrBrE,EAAIQ,UAAUtB,KAAKkF,IAAKlF,KAAKK,SAASC,EAAGN,KAAKK,SAASE,EAAGP,KAAKG,MAAOH,KAAKI,QAC3E,IAAIiF,EAAMrF,KAAKiF,OACfnE,EAAIwB,KAAQtC,KAAKI,OAAO,GAAM,WAC9BU,EAAIsB,UAAY,QAChBtB,EAAIyB,SAAS8C,EAAKrF,KAAKK,SAASC,EAAI,GAAIN,KAAKK,SAASE,EAAI,S,KAK1DoF,E,WACJ,aAAe,oBACb3F,KAAKC,UAAY,E,wCAEnB,SAAMa,IACoB,IAApBd,KAAKC,YACPa,EAAI8E,KAAK,EAAG,EAAGxG,EAAcD,GAC7B2B,EAAIsB,UAAY,kBAChBtB,EAAI+E,OAEJ/E,EAAIwB,KAAO,aACXxB,EAAIsB,UAAY,QAChBtB,EAAIgF,UAAY,SAChBhF,EAAIyB,SAAS,YAAanD,IAAkBD,U,KAK5Ce,E,WACJ,aAAe,oBACbF,KAAK+F,WAAa3E,SAASC,eAAe,SAC1CrB,KAAKgG,UAAY5E,SAASC,eAAe,YACzCrB,KAAKiG,WAAa7E,SAASC,eAAe,aAC1CrB,KAAKkG,MAAQlG,KAAK+F,WAClB/F,KAAKG,MAAQH,KAAKkG,MAAM/F,MACxBH,KAAKI,OAASJ,KAAKkG,MAAM9F,OACzBJ,KAAKK,SAAW,CACdC,EAAG,IACHC,EAAGpB,IAAkBa,KAAKI,QAE5BJ,KAAK4B,MAAQ,EACb5B,KAAKmG,SAAW,EAChBnG,KAAKoG,QAAU,GACfpG,KAAKqG,aAAe,EACpBrG,KAAKsG,WAAa,EAClBtG,KAAKuG,OAAS,EACdvG,KAAKmF,OAAS,EAEdnF,KAAKwG,MAAQ,EAEbxG,KAAKyG,UAAY,E,wCAKnB,SAAK3F,GAAM,IAAD,OACRd,KAAK+F,WAAW5C,iBAAiB,QAAQ,SAAAiC,GACvCtE,EAAIQ,UAAU,EAAKyE,WAAY,EAAK1F,SAASC,EAAG,EAAKD,SAASE,EAAG,EAAKJ,MAAO,EAAKC,QAClF,EAAK+E,QAAU,KAEjBnF,KAAKgG,UAAU7C,iBAAiB,QAAQ,SAAAiC,GACtCtE,EAAIQ,UAAU,EAAK0E,UAAW,EAAK3F,SAASC,EAAG,EAAKD,SAASE,EAAG,EAAKJ,MAAO,EAAKC,QACjF,EAAK+E,QAAU,KAEjBnF,KAAKiG,WAAW9C,iBAAiB,QAAQ,SAAAiC,GACvCtE,EAAIQ,UAAU,EAAK2E,WAAY,EAAK5F,SAASC,EAAG,EAAKD,SAASE,EAAG,EAAKJ,MAAO,EAAKC,QAClF,EAAK+E,QAAU,KAGG,IAAhBnF,KAAKmF,QACPrE,EAAIQ,UAAUtB,KAAKkG,MAAOlG,KAAKK,SAASC,EAAGN,KAAKK,SAASE,EAAGP,KAAKG,MAAOH,KAAKI,U,oBAIjF,SAAO4D,EAAW0C,EAAYC,EAAWC,GAYvC,IAXwB,IAApBA,EAAK3G,YAEPD,KAAKK,SAASC,GAAKN,KAAKmG,SACpBnG,KAAKK,SAASC,EAAIN,KAAKG,MAAQf,IACjCY,KAAKK,SAASC,EAAIlB,EAAeY,KAAKG,OAEpCH,KAAKK,SAASC,EAAI,IACpBN,KAAKK,SAASC,EAAI,IAIC,IAAnBsG,EAAK3G,UAAiB,CACxBD,KAAKK,SAASE,GAAK,EACnB,IAAK,IAAI2B,EAAI,EAAGA,EAAIwE,EAAWvE,OAAQD,IAErC,GAAIlC,KAAKK,SAASC,EAAIN,KAAKG,MAAQuG,EAAWxE,GAAG7B,SAASC,GACrDN,KAAKK,SAASC,EAAIoG,EAAWxE,GAAG7B,SAASC,EAAIoG,EAAWxE,GAAG/B,OAC3DP,KAAKiH,IAAI7G,KAAKK,SAASE,EAAIP,KAAKI,OAASsG,EAAWxE,GAAG7B,SAASE,GAAK,KACpEP,KAAKqG,aAAe,GAAyB,IAApBrG,KAAKsG,YAClC,CACAtG,KAAKmB,OAAS,QACdnB,KAAKsG,WAAa,EAClBtG,KAAKqG,aAAe,EACpBrG,KAAKK,SAASE,EAAImG,EAAWxE,GAAG7B,SAASE,EAAIP,KAAKI,OAASJ,KAAKuG,OAChE,IAAIO,EAAMJ,EAAW,GACrBA,EAAW,GAAKA,EAAWxE,GAC3BwE,EAAWxE,GAAK4E,EAChB5E,EAAIwE,EAAWvE,YAEfnC,KAAKsG,WAAa,EAKtB,IAAK,IAAIpE,EAAI,EAAGA,EAAIwE,EAAWvE,OAAQD,IACrCwE,EAAWxE,GAAG7B,SAASE,GAAK,EACxBmG,EAAWxE,GAAG7B,SAASE,EAAIpB,IAC7Ba,KAAKwG,OAAS,EACdpF,SAASC,eAAe,WAAWoB,UAAY,UAAYzC,KAAKwG,MAChEE,EAAWxE,GAAG7B,SAASE,GAAKmG,EAAWxE,GAAG9B,QAK9C,IAAK,IAAI8B,EAAI,EAAGA,EAAIyE,EAAUxE,OAAQD,IAAK,CAEzC,GADAyE,EAAUzE,GAAG7B,SAASE,GAAK,EACvBP,KAAKK,SAASC,EAAIN,KAAKG,MAAQwG,EAAUzE,GAAG7B,SAASC,GACpDN,KAAKK,SAASC,EAAIqG,EAAUzE,GAAG7B,SAASC,EAAIqG,EAAUzE,GAAG/B,OACzDP,KAAKiH,IAAI7G,KAAKK,SAASE,EAAIP,KAAKI,OAASuG,EAAUzE,GAAG7B,SAASE,GAAK,IACpEP,KAAKqG,aAAe,EAEvB,GAAyB,IAArBM,EAAUzE,GAAGqD,IACfoB,EAAUzE,GAAGqD,IAAM,EAEnBoB,EAAUzE,GAAGgD,IAAMyB,EAAUzE,GAAGwD,OACxB,IAAIqB,MAAMC,GAChBC,OACF/E,EAAI,EAOV,GAAwB,IAApBlC,KAAKsG,YAGP,GAFAtG,KAAKqG,cAAgBrG,KAAKoG,QAC1BpG,KAAKK,SAASE,GAAKP,KAAKqG,aACpBrG,KAAKqG,aAAe,EACtB,GAAIrG,KAAKK,SAASE,EAAIpB,EAAgBa,KAAKI,OACzCJ,KAAKwG,OAAS,EACdpF,SAASC,eAAe,WAAWoB,UAAY,UAAYzC,KAAKwG,MAChExG,KAAKK,SAASE,EAAIpB,IAAkBa,KAAKI,OACzCJ,KAAKqG,aAAe,EACpBO,EAAK3G,WAAa,EAClB2C,QAAQC,IAAI,aACUzB,SAASC,eAAe,mBAC9B6F,QACD9F,SAASC,eAAe,iBAC9B4F,YAIbjH,KAAKqG,aAAe,EAItB,IAAK,IAAInE,EAAI,EAAGA,EAAIyE,EAAUxE,OAAQD,IACX,IAArByE,EAAUzE,GAAGqD,MACXoB,EAAUzE,GAAGqD,IAAM,KACrBoB,EAAUzE,GAAGqD,IAAM,IAErBoB,EAAUzE,GAAG7B,SAASE,GAAKoG,EAAUzE,GAAGqD,IACxCoB,EAAUzE,GAAGqD,KAAO,GAElBoB,EAAUzE,GAAG7B,SAASE,EAAIpB,IAC5Ba,KAAKwG,OAAS,EACdpF,SAASC,eAAe,WAAWoB,UAAY,UAAYzC,KAAKwG,MAChEG,EAAUzE,GAAG7B,SAASE,GAAKoG,EAAUzE,GAAG9B,OACxCuG,EAAUzE,GAAGqD,IAAM,EAEnBoB,EAAUzE,GAAGgD,IAAMyB,EAAUzE,GAAGuD,Y,sBAMxC,WACEzF,KAAKmG,UAAYnG,KAAK4B,MACtB5B,KAAKkG,MAAQlG,KAAKgG,Y,uBAGpB,WACEhG,KAAKmG,SAAWnG,KAAK4B,MACrB5B,KAAKkG,MAAQlG,KAAKiG,a,kBAGpB,SAAKW,GACH,IAAwB,IAApBA,EAAK3G,UAAkB,CAGzB,GADAD,KAAKsG,WAAa,EACQ,IAAtBtG,KAAKqG,aACPrG,KAAKqG,cAAgB,EACb,IAAIU,MAAMI,GAChBF,OAEJL,EAAK3G,UAAY,K,kBAIrB,WACED,KAAKmG,SAAW,EAChBnG,KAAKkG,MAAQlG,KAAK+F,e,KA6LPqB,EAzLF,WAEX,IAEI7D,EAFAL,EAAS,GACT0D,EAAO,GACC9F,EAAM,GACd4F,EAAa,GACbC,EAAY,GACZ3B,EAASpF,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAC1CuH,EAAmB,EACnBtD,EAAW,EAkHf,SAASF,EAASD,GAChB,IAAII,EAAYJ,EAAYG,EAE5B,GADAA,EAAWH,EACC,KAAR9C,EAAY,CACdA,EAAImD,UAAU,EAAG,EAAG7E,EAAcD,GAElC,IAAImI,EAAalG,SAASC,eAAe,mBAChB,IAArBgG,EACFC,EAAWnE,iBAAiB,QAAQ,SAAAiC,GAC9BtE,IACFA,EAAIQ,UAAUgG,EAAY,EAAG,EAAGlI,EAAcD,GAC9CkI,EAAmB,MAIvBvG,EAAIQ,UAAUgG,EAAY,EAAG,EAAGlI,EAAcD,GAGjC,KAAX+D,IACFA,EAAOgB,OAAOF,EAAW0C,EAAYC,EAAWC,GAChD1D,EAAOO,KAAK3C,IAGd,IAAK,IAAIoB,EAAI,EAAGA,EAAIyE,EAAUxE,OAAQD,IACpCyE,EAAUzE,GAAGuB,KAAK3C,GAEpB,IAAK,IAAIoB,EAAI,EAAGA,EAAIwE,EAAWvE,OAAQD,IACrCwE,EAAWxE,GAAGuB,KAAK3C,GAErB8F,EAAKnD,KAAK3C,GAEZ6C,sBAAsBE,GAQxB,OAvJAC,qBAAU,WAER,IAAIyD,EAAkBnG,SAASC,eAAe,mBAC9CkG,EAAgBN,OAChBM,EAAgBC,MAAO,EACvB5E,QAAQC,IAAI,oBACZzB,SAASC,eAAe,aAAaoB,UAAY,kCAAoCuC,EACrF5D,SAASC,eAAe,WAAWoB,UAAY,SAKjD,WACEc,EAASnC,SAASC,eAAe,cACjCP,EAAMyC,EAAOC,WAAW,MACxBN,EAAS,IAAIhD,EACb0G,EAAO,IAAIjB,EACXzC,EAAOO,KAAK3C,GAEZ8B,QAAQC,IAAI,YAKZ,IAHA,IAAI4E,EAAarI,IACbsI,EAAavI,EAERwI,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACtC,IAAIhI,EAAI,IAAIoF,EAAUC,GAClB4C,EAAOhI,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GACzCF,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAAM,IACzC8H,IAAS,GAEPH,EAAaG,EAAO,GAEbH,EAAaG,EAAOjI,EAAEQ,MAAQf,EADvCqI,GAAcG,EAIdH,GAAcG,EAIhBF,GADW9H,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAE5CH,EAAEU,SAASC,EAAImH,EACf9H,EAAEU,SAASE,EAAImH,EAAa/H,EAAES,OAC9BsG,EAAWmB,KAAKlI,GAGlB,IAAK,IAAIgI,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACvC,IAAIhI,EAAI,IAAI2F,EAASN,GACrBrF,EAAEU,SAASC,EAAIV,KAAKC,MAAMD,KAAKE,UAAYV,EAAeO,EAAEQ,OAAS,IAAM,EAC3ER,EAAEU,SAASE,EAAIX,KAAKC,MAAMD,KAAKE,UAAYX,EAAgBQ,EAAES,QAAU,IAAM,EAG7E,IADA,IAAI0H,EAAa,EACRC,EAAI,EAAGA,EAAIrB,EAAWvE,OAAQ4F,IACjCpI,EAAEU,SAASC,EAAIoG,EAAWqB,GAAG1H,SAASC,EAAIoG,EAAWqB,GAAG5H,OACvDR,EAAEU,SAASC,EAAIoG,EAAWqB,GAAG1H,SAASC,EAAIoG,EAAWqB,GAAG5H,OACxDR,EAAEU,SAASE,EAAImG,EAAWqB,GAAG1H,SAASE,EAAImG,EAAWqB,GAAG3H,QACxDT,EAAEU,SAASE,EAAImG,EAAWqB,GAAG1H,SAASE,EAAImG,EAAWqB,GAAG3H,SAE3D0H,EAAa,EACbC,EAAIrB,EAAWvE,QAGnB,GAAmB,IAAf2F,EACF,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAUxE,OAAQ4F,IAChCpI,EAAEU,SAASC,EAAIqG,EAAUoB,GAAG1H,SAASC,EAAIqG,EAAUoB,GAAG5H,OACrDR,EAAEU,SAASC,EAAIqG,EAAUoB,GAAG1H,SAASC,EAAIqG,EAAUoB,GAAG5H,OACtDR,EAAEU,SAASE,EAAIoG,EAAUoB,GAAG1H,SAASE,EAAIoG,EAAUoB,GAAG3H,QACtDT,EAAEU,SAASE,EAAIoG,EAAUoB,GAAG1H,SAASE,EAAIoG,EAAUoB,GAAG3H,SAEzD0H,EAAa,GAIA,IAAfA,EACFH,GAAS,EAEThB,EAAUkB,KAAKlI,IAnEnBgD,GACAgB,sBAAsBE,MAuExBzC,SAAS+B,iBAAiB,WAAW,SAAAC,GACnC,GAAe,KAAXF,EACF,OAAQE,EAAMC,KACZ,IAAK,YACHH,EAAO8E,WACP,MACF,IAAK,aACH9E,EAAO+E,YACP,MACF,IAAK,IACH/E,EAAOI,KAAKsD,OAOpBxF,SAAS+B,iBAAiB,SAAS,SAAAC,GACjC,GAAe,KAAXF,EACF,OAAQE,EAAMC,KACZ,IAAK,YACCH,EAAOiD,SAAW,GAAGjD,EAAOvC,OAChC,MACF,IAAK,aACCuC,EAAOiD,SAAW,GAAGjD,EAAOvC,WAgDtC,sBAAK4D,UAAU,OAAf,UAEE,uBAAOC,GAAG,kBAAkB0D,UAAQ,EAACrD,IAAK0C,IAC1C,uBAAO/C,GAAG,gBAAgB0D,UAAQ,EAACrD,IAAKsD,IAExC,oBAAI3D,GAAG,YAAP,kBACA,oBAAIA,GAAG,UAAP,oBACA,wBAAQA,GAAG,aAAarE,MAAM,MAAMC,OAAO,QAC3C,qBAAKoE,GAAG,QAAQK,IAAKuD,EAAO/D,MAAO,CAACC,QAAQ,QAASM,IAAI,OAAOxE,OAAO,MAAMD,MAAM,OACnF,qBAAKqE,GAAG,YAAYK,IAAKwD,EAAWhE,MAAO,CAACC,QAAQ,QAASM,IAAI,YAAYxE,OAAO,MAAMD,MAAM,OAChG,qBAAKqE,GAAG,WAAWK,IAAKyD,EAAUjE,MAAO,CAACC,QAAQ,QAASM,IAAI,WAAWxE,OAAO,MAAMD,MAAM,OAC7F,qBAAKqE,GAAG,QAAQK,IAAKhF,EAAOwE,MAAO,CAACC,QAAQ,QAASM,IAAI,UACzD,qBAAKJ,GAAG,WAAWK,IAAK0D,EAAUlE,MAAO,CAACC,QAAQ,QAASM,IAAI,aAC/D,qBAAKJ,GAAG,kBAAkBK,IAAK2D,EAAiBnE,MAAO,CAACC,QAAQ,QAASM,IAAI,oBAC7E,uBACA,wBAAQF,QArBZ,WACE9B,QAAQC,IAAI,SACZf,OAAO2G,SAASC,QAAO,IAmBrB,6BCrbSC,EAfH,WAEV,OACE,qBAAKpE,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqE,KAAK,IAAIC,UAAWzB,EAAM0B,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWzB,IAC/B,cAAC,IAAD,CAAOwB,KAAK,UAAUC,UAAWnG,UCD1BqG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJtI,SAASC,eAAe,SAM1B0H,M","file":"static/js/main.a07318d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/potter.0ed17711.png\";","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport potter from './img/potter.png';\r\n\r\nconst CANVAS_HEIGHT = 800;\r\nconst CANVAS_WIDTH = 800;\r\n// const GRAVITY = 0.125;\r\nconst GRAVITY = 0.2;\r\nconst OBSTACLE_WIDTH = 40;\r\nconst playerX = 0.2*CANVAS_WIDTH;\r\n\r\nlet SPEED = 3;\r\nlet ANSWER = 1;\r\nlet SCORE = 0;\r\nlet SHOW_RESULTS = false;\r\n\r\n\r\nfunction randomNum(a, b) {\r\n    return Math.floor(Math.random() * b) + a; \r\n}\r\n\r\nclass Game {\r\n    constructor() {\r\n        this.gameState = 0;\r\n    }\r\n}\r\n\r\nclass Player {\r\n    constructor() {\r\n        this.width = 110;\r\n        this.height = 100;\r\n        this.position = {\r\n            x: playerX,\r\n            y: 0.5*CANVAS_HEIGHT\r\n        }\r\n        this.transform = {\r\n            x: playerX,\r\n            y: 0.5*CANVAS_HEIGHT\r\n        }\r\n        this.gravityDeceleration = 0;\r\n        this.jumpBoost = 0;\r\n        this.stop = 0;\r\n        this.rotation = 0;\r\n        this.direction = 1;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.save();\r\n        \r\n        let upTilt = -50;\r\n        let downTilt = 80;\r\n\r\n        this.rotation += this.direction;\r\n        this.direction += 0.5;\r\n        if (this.direction > 1) {\r\n            this.direction = 1;\r\n        }\r\n\r\n        // this.rotation = this.direction + (this.transform.y / CANVAS_HEIGHT) * (downTilt - this.rotation) + this.rotation;\r\n\r\n        if (this.rotation > downTilt) {\r\n            this.rotation = downTilt;\r\n        }\r\n        if (this.rotation < upTilt) {\r\n            this.rotation = upTilt;\r\n        }\r\n\r\n        var sin = Math.sin(this.rotation * Math.PI / 180);\r\n        var cos = Math.cos(this.rotation * Math.PI / 180);\r\n        ctx.transform(cos, sin, -sin, cos, this.transform.x - this.width*cos/2, this.transform.y);\r\n\r\n        \r\n        // ctx.fillStyle = \"black\";\r\n        // ctx.fillRect(0, 0, this.width, this.height); // fix this\r\n        let imgSrc = document.getElementById(\"spriteID\");\r\n        ctx.drawImage(imgSrc, 0, 0, this.width, this.height);\r\n        ctx.restore();\r\n\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.gravityDeceleration += GRAVITY;\r\n        this.transform.y += this.gravityDeceleration;\r\n    }\r\n\r\n    jump() {\r\n        this.gravityDeceleration = -6;\r\n        this.direction = -7;\r\n    }\r\n}\r\n\r\nclass Obstacle {\r\n    constructor() {\r\n        this.tops = [0, 10, 20, 30, 40];\r\n        this.heights = [10, 10, 10, 10, 10];\r\n        this.speed = 10;\r\n        this.positionX = CANVAS_WIDTH;        \r\n        this.window = 150;\r\n        this.correct = 1;\r\n    }\r\n\r\n    create() {\r\n        this.tops[0] = 0;\r\n        this.tops[1] = randomNum(CANVAS_HEIGHT*0.1, CANVAS_HEIGHT*0.3);\r\n        this.tops[2] = this.tops[1] + this.window;\r\n        this.tops[3] = this.tops[2] + randomNum(CANVAS_HEIGHT*0.1, CANVAS_HEIGHT*0.15);\r\n        this.tops[4] = this.tops[3] + this.window;\r\n        this.correct = 1 + 2*(randomNum(1, 2)-1); // 1 or 3\r\n        \r\n        this.answerCorrect = ANSWER * randomNum(2, 9);\r\n        this.answerIncorrect = ANSWER * randomNum(2, 9) + randomNum(1, ANSWER-1);\r\n    }\r\n\r\n    draw(ctx) {\r\n        for (let i = 0; i < this.tops.length; i++) {\r\n            ctx.fillStyle = \"rgb(100, 100, 100)\";\r\n            if (i === 1 || i === 3) {                \r\n                ctx.fillStyle = \"white\";\r\n                if (SHOW_RESULTS) {\r\n                    ctx.fillStyle = \"red\";\r\n                }\r\n            }\r\n            if (i === this.correct && SHOW_RESULTS) {\r\n                ctx.fillStyle = \"green\";\r\n            }\r\n            if (i+1 < this.tops.length) {\r\n                ctx.fillRect(this.positionX, this.tops[i], OBSTACLE_WIDTH, this.tops[i+1] - this.tops[i]);\r\n            } else {\r\n                ctx.fillRect(this.positionX, this.tops[i], OBSTACLE_WIDTH, CANVAS_HEIGHT - this.tops[i]);\r\n            }\r\n\r\n            // draw scores\r\n            if (i === 1 || i === 3) { \r\n                ctx.fillStyle = \"blue\";\r\n                ctx.font = \"30px Verdana\";\r\n                if (i === this.correct) {\r\n                    ctx.fillText(this.answerCorrect, this.positionX, this.tops[i] + this.window/2);\r\n                } else {\r\n                    ctx.fillText(this.answerIncorrect, this.positionX, this.tops[i] + this.window/2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.positionX -= SPEED;\r\n        if (this.positionX + OBSTACLE_WIDTH < 0) {\r\n            this.positionX = CANVAS_WIDTH;\r\n            this.create();\r\n        }\r\n        SCORE += SPEED;\r\n        document.getElementById(\"scoreID\").innerHTML = \"Score: \" + SCORE;\r\n    }\r\n}\r\n\r\n\r\nconst Flappy = () => {\r\n\r\n    useEffect(() => {\r\n    });\r\n    \r\n    function collisionCheck(game, player, allObstacles, ctx) {\r\n        if (player.transform.y > CANVAS_HEIGHT) {\r\n            player.transform.y = CANVAS_HEIGHT;\r\n            game.gameState = -1;\r\n        }\r\n\r\n        let passed = true;\r\n        if (player.transform.x + player.width > allObstacles.positionX\r\n            && player.transform.x < allObstacles.positionX + OBSTACLE_WIDTH) {\r\n                passed = false;\r\n                if (player.transform.y + player.height > allObstacles.tops[allObstacles.correct]\r\n                    && player.transform.y < allObstacles.tops[allObstacles.correct] + allObstacles.window) {\r\n                        passed = true;\r\n                }\r\n        }\r\n        if (passed === false) {\r\n            game.gameState = -1;\r\n            SHOW_RESULTS = true;\r\n            allObstacles.draw(ctx);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    async function startGame() {\r\n        console.log(\"game has begun, speed is \" + SPEED);\r\n        // let canvas = document.getElementById(\"gameScreen\");\r\n        // let ctx = canvas.getContext(\"2d\");\r\n\r\n        let game = new Game();\r\n        game.gameState = 1;\r\n\r\n        let btns = document.getElementsByClassName(\"speedBtn\");\r\n        for (let i = 0; i < btns.length; i++) {\r\n            btns[i].disabled = true;\r\n        }\r\n\r\n        let player = new Player();\r\n        document.addEventListener(\"keydown\", event => {\r\n            switch (event.key) {\r\n                case \"ArrowLeft\":\r\n                    //   player.moveLeft();\r\n                    console.log(\"left\");\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    console.log(\"right\");\r\n                    break;\r\n                case \" \":\r\n                    //player.jumpBoost = 1;\r\n                    player.jump();\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n    \r\n        document.addEventListener(\"keyup\", event => {\r\n            switch (event.key) {\r\n                case \"ArrowLeft\":\r\n                    //   player.moveLeft();\r\n                    console.log(\"left\");\r\n                    break;\r\n                case \"ArrowRight\":\r\n                    console.log(\"right\");\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n\r\n        let canvas = document.getElementById(\"gameScreen\");\r\n        canvas.addEventListener(\"click\", function() { player.jump() });\r\n        let ctx = canvas.getContext(\"2d\");\r\n        player.draw(ctx);\r\n\r\n        let allObstacles = new Obstacle();\r\n        allObstacles.create();\r\n\r\n\r\n        requestAnimationFrame(\r\n            function(timestamp) {\r\n                gameLoop(timestamp, ctx, game, player, allObstacles);\r\n            }\r\n        );\r\n    }\r\n\r\n    function makeQuestion() {\r\n        ANSWER = randomNum(2, 10);\r\n        document.getElementById(\"questionID\").innerHTML = \"Question: which numbers are multiples of \" + ANSWER + \"?\";        \r\n    }\r\n\r\n    let lastTime = 0;\r\n    function gameLoop(timestamp, ctx, game, player, allObstacles) {\r\n        if (game.gameState === 1) {\r\n\r\n            let deltatime = timestamp - lastTime;\r\n            lastTime = timestamp;\r\n            ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n            ctx.font = \"60px Verdana\";\r\n            ctx.fillText(\"Multiples of \" + ANSWER, CANVAS_WIDTH*0.2, CANVAS_HEIGHT/2);\r\n\r\n            allObstacles.update(deltatime);\r\n            allObstacles.draw(ctx);\r\n\r\n            player.update(deltatime);\r\n            player.draw(ctx);\r\n\r\n            requestAnimationFrame(\r\n                function(timestamp) {\r\n                    gameLoop(timestamp, ctx, game, player, allObstacles);\r\n                }\r\n            );\r\n\r\n            collisionCheck(game, player, allObstacles, ctx);\r\n\r\n        } else {\r\n            console.log(\"game over\");\r\n            document.getElementById(\"resetBtn\").style.display = \"block\";\r\n            let btns = document.getElementsByClassName(\"speedBtn\");\r\n            for (let i = 0; i < btns.length; i++) {\r\n                btns[i].disabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        SCORE = 0;\r\n        console.log(\"reset\");\r\n        document.getElementById(\"resetBtn\").style.display = \"none\";\r\n        SHOW_RESULTS = false;\r\n        makeQuestion();\r\n        setTimeout(startGame, 3000);\r\n    }\r\n\r\n    function decreaseSpeed() {\r\n        SPEED--;\r\n        if (SPEED < 0) {\r\n            SPEED = 0;\r\n        }\r\n        document.getElementById(\"speedID\").innerHTML = \"Speed: \" + SPEED;\r\n    }\r\n\r\n    function increaseSpeed() {\r\n        SPEED++;\r\n        if (SPEED > 20) {\r\n            SPEED = 20;\r\n        }\r\n        document.getElementById(\"speedID\").innerHTML = \"Speed: \" + SPEED;\r\n    }\r\n\r\n    return ( \r\n        <div className=\"Flappy\">\r\n            <h4 id=\"questionID\" style={{display: \"inline\", paddingRight:\"400px\"}}>Question</h4>\r\n            <h4 id=\"scoreID\" style={{display: \"inline\"}}>Score: 0</h4>\r\n            <br />\r\n            <br />\r\n            <canvas id=\"gameScreen\" width=\"800\" height=\"800\"></canvas>\r\n            <br />\r\n            <button id=\"resetBtn\" onClick={reset}>Play Again?</button>\r\n            <p id=\"testID\"></p>\r\n            <button className=\"speedBtn\" onClick={decreaseSpeed} style={{display: \"inline\"}}>-</button>\r\n            <p id=\"speedID\" style={{display: \"inline\"}}>Speed: 3</p>\r\n            <button className=\"speedBtn\" onClick={increaseSpeed} style={{display: \"inline\"}}>+</button>\r\n            <img id=\"spriteID\" alt=\"potter\" src={potter} style={{display:\"none\"}}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flappy;","export default __webpack_public_path__ + \"static/media/dora1.26d2b5e5.png\";","export default __webpack_public_path__ + \"static/media/doraLeft.1f2dd769.png\";","export default __webpack_public_path__ + \"static/media/doraRight.48b4e079.png\";","export default __webpack_public_path__ + \"static/media/floor.3c58318d.png\";","export default __webpack_public_path__ + \"static/media/floorBad.f523f4c3.png\";","export default __webpack_public_path__ + \"static/media/forest.4084e9ae.png\";","export default __webpack_public_path__ + \"static/media/backgroundMusic.e69518ac.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.ecaf1372.mp3\";","export default __webpack_public_path__ + \"static/media/pop.5b688e1e.mp3\";","export default __webpack_public_path__ + \"static/media/fall.c2c56b90.mp3\";","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport dora1 from './img/dora1.png';\r\nimport doraLeft from './img/doraLeft.png';\r\nimport doraRight from './img/doraRight.png';\r\nimport floor from './img/floor.png';\r\nimport floorBad from './img/floorBad.png';\r\nimport backgroundImage from './img/forest.png';\r\nimport backgroundMusic from './snd/backgroundMusic.mp3';\r\nimport gameOverMusic from './snd/gameOver.mp3';\r\nimport jumpSFX from './snd/pop.mp3';\r\nimport fallSFX from './snd/fall.mp3';\r\n\r\nconst CANVAS_HEIGHT = 800;\r\nconst CANVAS_WIDTH = 800;\r\n\r\nclass BlockGood {\r\n  constructor(factor) {\r\n    this.width = 160;\r\n    this.height = 30;\r\n    this.position = {\r\n      x: 0,\r\n      y: 0//posY - this.height\r\n    }\r\n    this.answer = (Math.floor(Math.random() * 12) + 1) * factor;\r\n    this.img = document.getElementById(\"floor\");\r\n    this.loaded = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    // ctx.fillStyle = (\"rgb(0, 0, 0)\");\r\n    // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    //let txt = (Math.floor(Math.random() * 12) + 1) * factor;\r\n    this.img.addEventListener('load', e => {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);\r\n      this.loaded += 1;\r\n    });\r\n    if (this.loaded !== 0) {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);      \r\n      let txt = this.answer;\r\n      ctx.font = (this.height-10) + \"px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillText(txt, this.position.x + 60, this.position.y + 24)\r\n    }\r\n  }\r\n}\r\n\r\nclass BlockBad {\r\n  constructor(factor) {\r\n    this.width = 160;\r\n    this.height = 30;\r\n    this.id = 0;\r\n    this.hit = 0;\r\n    this.position = {\r\n      x: 0,\r\n      y: 0\r\n    }    \r\n    this.colour = \"rgb(0, 0, 0)\";\r\n    this.answer = (Math.floor(Math.random() * 12) + 1) * factor + Math.floor(Math.random() * (factor-2) + 1);\r\n    this.imgGood = document.getElementById(\"floor\");\r\n    this.imgBad = document.getElementById(\"floorBad\");\r\n    this.img = this.imgGood;\r\n    this.loaded = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.img.addEventListener('load', e => {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);\r\n      this.loaded += 1;\r\n    });\r\n    if (this.loaded !== 0) {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);      \r\n      let txt = this.answer;\r\n      ctx.font = (this.height-10) + \"px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillText(txt, this.position.x + 60, this.position.y + 24)\r\n    }\r\n  }    \r\n}\r\n\r\nclass Menu {\r\n  constructor() {\r\n    this.gameState = 0;    \r\n  }\r\n  draw (ctx) {\r\n    if (this.gameState === -1) {\r\n      ctx.rect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"GAME OVER\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\r\n    }\r\n  }\r\n}\r\n\r\nclass Player {\r\n  constructor() {\r\n    this.imageStill = document.getElementById(\"dora1\");\r\n    this.imageLeft = document.getElementById(\"doraLeft\");\r\n    this.imageRight = document.getElementById(\"doraRight\");\r\n    this.image = this.imageStill;\r\n    this.width = this.image.width;\r\n    this.height = this.image.height;\r\n    this.position = {\r\n      x: 200,\r\n      y: CANVAS_HEIGHT-5 - this.height\r\n    }\r\n    this.speed = 5;\r\n    this.movement = 0;\r\n    this.gravity = 0.2;\r\n    this.gravitySpeed = 0;\r\n    this.onPlatform = 0;\r\n    this.buffer = 1;\r\n    this.loaded = 1;\r\n\r\n    this.score = 0;\r\n    \r\n    this.printTest = 0;\r\n    // https://static.wikia.nocookie.net/doratheexplorer/images/1/10/3.png/revision/latest?cb=20160704175809\r\n    \r\n  }\r\n\r\n  draw(ctx) {\r\n    this.imageStill.addEventListener('load', e => {\r\n      ctx.drawImage(this.imageStill, this.position.x, this.position.y, this.width, this.height);      \r\n      this.loaded += 1;\r\n    });\r\n    this.imageLeft.addEventListener('load', e => {\r\n      ctx.drawImage(this.imageLeft, this.position.x, this.position.y, this.width, this.height);      \r\n      this.loaded += 1;\r\n    });\r\n    this.imageRight.addEventListener('load', e => {\r\n      ctx.drawImage(this.imageRight, this.position.x, this.position.y, this.width, this.height);      \r\n      this.loaded += 1;\r\n      \r\n    });\r\n    if (this.loaded !== 0) {\r\n      ctx.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\r\n    }\r\n  }\r\n\r\n  update(deltatime, goodBlocks, badBlocks, menu) {\r\n    if (menu.gameState !== -1) {\r\n      // left/right player movement\r\n      this.position.x += this.movement;    \r\n      if (this.position.x + this.width > CANVAS_WIDTH) {\r\n        this.position.x = CANVAS_WIDTH - this.width;\r\n      }\r\n      if (this.position.x < 0) {\r\n        this.position.x = 0;\r\n      }\r\n    }    \r\n\r\n    if (menu.gameState === 1) {\r\n      this.position.y += 1;\r\n      for (let i = 0; i < goodBlocks.length; i++) {\r\n        // check if player has landed on a block\r\n        if (this.position.x + this.width > goodBlocks[i].position.x \r\n          && this.position.x < goodBlocks[i].position.x + goodBlocks[i].width\r\n          && Math.abs(this.position.y + this.height - goodBlocks[i].position.y) < 15\r\n          && (this.gravitySpeed > 0 || this.onPlatform === 1)\r\n        ) {\r\n          this.imgSrc = \"still\";\r\n          this.onPlatform = 1;\r\n          this.gravitySpeed = 0;\r\n          this.position.y = goodBlocks[i].position.y - this.height - this.buffer;\r\n          let tmp = goodBlocks[0]\r\n          goodBlocks[0] = goodBlocks[i];\r\n          goodBlocks[i] = tmp;\r\n          i = goodBlocks.length; \r\n        } else {\r\n          this.onPlatform = 0;\r\n        }\r\n      }\r\n\r\n      // move each block down\r\n      for (let i = 0; i < goodBlocks.length; i++) {\r\n        goodBlocks[i].position.y += 1;\r\n        if (goodBlocks[i].position.y > CANVAS_HEIGHT) {\r\n          this.score += 1;\r\n          document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\r\n          goodBlocks[i].position.y = -goodBlocks[i].height;\r\n        }\r\n      }\r\n  \r\n      // check if player steps on bad block\r\n      for (let i = 0; i < badBlocks.length; i++) {\r\n        badBlocks[i].position.y += 1;\r\n        if (this.position.x + this.width > badBlocks[i].position.x \r\n          && this.position.x < badBlocks[i].position.x + badBlocks[i].width\r\n          && Math.abs(this.position.y + this.height - badBlocks[i].position.y) < 15\r\n          && this.gravitySpeed > 0\r\n        ) {\r\n          if (badBlocks[i].hit === 0) {\r\n            badBlocks[i].hit = 1;            \r\n            //badBlocks[i].colour = \"rgb(255, 0, 0)\";\r\n            badBlocks[i].img = badBlocks[i].imgBad;\r\n            let a = new Audio(jumpSFX);\r\n            a.play();\r\n            i = 0;\r\n          }\r\n        }\r\n      }\r\n\r\n      \r\n      // make player fall\r\n      if (this.onPlatform === 0) {\r\n        this.gravitySpeed += this.gravity;\r\n        this.position.y += this.gravitySpeed;\r\n        if (this.gravitySpeed > 0) {\r\n          if (this.position.y > CANVAS_HEIGHT - this.height) { // hit the ground (bottom of screen)\r\n            this.score += 1;\r\n            document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\r\n            this.position.y = CANVAS_HEIGHT-5 - this.height;\r\n            this.gravitySpeed = 0; \r\n            menu.gameState = -1; // game over\r\n            console.log(\"game over\");  \r\n            let backgroundMusic = document.getElementById(\"backgroundMusic\");\r\n            backgroundMusic.pause();    \r\n            let gameOver = document.getElementById(\"gameOverMusic\");\r\n            gameOver.play();\r\n          }\r\n        }        \r\n      } else {\r\n        this.gravitySpeed = 0;\r\n      }\r\n  \r\n      // make bad blocks fall\r\n      for (let i = 0; i < badBlocks.length; i++) {\r\n        if (badBlocks[i].hit !== 0) {\r\n          if (badBlocks[i].hit > 10) {\r\n            badBlocks[i].hit = 10;\r\n          }\r\n          badBlocks[i].position.y += badBlocks[i].hit;\r\n          badBlocks[i].hit += 1;\r\n        }      \r\n        if (badBlocks[i].position.y > CANVAS_HEIGHT) {\r\n          this.score += 1;\r\n          document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\r\n          badBlocks[i].position.y = -badBlocks[i].height;\r\n          badBlocks[i].hit = 0;\r\n          //badBlocks[i].colour = \"rgb(0, 0, 0)\";\r\n          badBlocks[i].img = badBlocks[i].imgGood;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    this.movement = -this.speed;\r\n    this.image = this.imageLeft;\r\n  }\r\n\r\n  moveRight() {\r\n    this.movement = this.speed;\r\n    this.image = this.imageRight;\r\n  }\r\n\r\n  jump(menu) {    \r\n    if (menu.gameState !== -1) {\r\n      //this.imgSrc = \"img/dora2.png\";\r\n      this.onPlatform = 0;\r\n      if (this.gravitySpeed === 0) { // prevents spamming \r\n        this.gravitySpeed = -8;\r\n        let a = new Audio(fallSFX);\r\n        a.play();\r\n      }\r\n      menu.gameState = 1;\r\n    }    \r\n  }\r\n\r\n  stop() {\r\n    this.movement = 0;\r\n    this.image = this.imageStill;\r\n  }\r\n}\r\n\r\nconst Dora = () => {\r\n  \r\n  let player = \"\";\r\n  let menu = \"\";\r\n  let canvas, ctx = \"\";\r\n  let goodBlocks = [];\r\n  let badBlocks = [];\r\n  let factor = Math.floor(Math.random() * 11) + 2; // 2 - 12\r\n  let backgroundLoaded = 0;\r\n  let lastTime = 0;\r\n\r\n  useEffect(() => { \r\n    //let backgroundMusic = new Audio(\"http://codeskulptor-demos.commondatastorage.googleapis.com/descent/background%20music.mp3\");\r\n    let backgroundMusic = document.getElementById(\"backgroundMusic\");\r\n    backgroundMusic.play();\r\n    backgroundMusic.loop = true;\r\n    console.log(\"beginning v 1.22\");\r\n    document.getElementById(\"headingID\").innerHTML = \"Which numbers are divisible by \" + factor;\r\n    document.getElementById(\"scoreID\").innerHTML = \"Score:\";\r\n    startGame();\r\n    requestAnimationFrame(gameLoop);\r\n  });\r\n\r\n  function startGame() {\r\n    canvas = document.getElementById(\"gameScreen\");\r\n    ctx = canvas.getContext(\"2d\");\r\n    player = new Player();    \r\n    menu = new Menu(); \r\n    player.draw(ctx);\r\n    \r\n    console.log(\"starting\");\r\n    \r\n    let lastBlockX = CANVAS_WIDTH/2;\r\n    let lastBlockY = CANVAS_HEIGHT;\r\n\r\n    for (let block = 0; block < 8; block++) {\r\n      let b = new BlockGood(factor);\r\n      let xVar = Math.floor(Math.random() * 120) + 60;\r\n      if (Math.floor(Math.random() * 10) % 2 === 0) {\r\n        xVar *= -1;\r\n      }\r\n      if (lastBlockX + xVar < 0) {\r\n        lastBlockX -= xVar;\r\n      } else if (lastBlockX + xVar + b.width > CANVAS_WIDTH) {\r\n        lastBlockX -= xVar;\r\n      } else {\r\n        lastBlockX += xVar;\r\n      }\r\n\r\n      let yVar = Math.floor(Math.random() * 30) + 90;\r\n      lastBlockY -= yVar;\r\n      b.position.x = lastBlockX;\r\n      b.position.y = lastBlockY - b.height;\r\n      goodBlocks.push(b)\r\n    }\r\n    \r\n    for (let block = 0; block < 10; block++) {\r\n      let b = new BlockBad(factor);\r\n      b.position.x = Math.floor(Math.random() * (CANVAS_WIDTH - b.width) + 10) + 5;\r\n      b.position.y = Math.floor(Math.random() * (CANVAS_HEIGHT - b.height) - 10) + 5;\r\n      // check blocks do not intersect\r\n      let intersects = 0;\r\n      for (let c = 0; c < goodBlocks.length; c++) {\r\n        if (b.position.x > goodBlocks[c].position.x - goodBlocks[c].width\r\n          && b.position.x < goodBlocks[c].position.x + goodBlocks[c].width\r\n          && b.position.y > goodBlocks[c].position.y - goodBlocks[c].height\r\n          && b.position.y < goodBlocks[c].position.y + goodBlocks[c].height\r\n        ) {\r\n          intersects = 1;\r\n          c = goodBlocks.length;\r\n        }\r\n      }\r\n      if (intersects === 0) {\r\n        for (let c = 0; c < badBlocks.length; c++) {\r\n          if (b.position.x > badBlocks[c].position.x - badBlocks[c].width\r\n            && b.position.x < badBlocks[c].position.x + badBlocks[c].width\r\n            && b.position.y > badBlocks[c].position.y - badBlocks[c].height\r\n            && b.position.y < badBlocks[c].position.y + badBlocks[c].height\r\n          ) {\r\n            intersects = 1;\r\n          }\r\n        }\r\n      }\r\n      if (intersects === 1) {\r\n        block -= 1;\r\n      } else {\r\n        badBlocks.push(b);\r\n      }\r\n    }\r\n  }\r\n\r\n  document.addEventListener(\"keydown\", event => {\r\n    if (player !== \"\") {    \r\n      switch (event.key) {          \r\n        case \"ArrowLeft\":\r\n          player.moveLeft();\r\n          break;\r\n        case \"ArrowRight\":\r\n          player.moveRight();\r\n          break;\r\n        case \" \":\r\n          player.jump(menu);\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n  });\r\n  \r\n  document.addEventListener(\"keyup\", event => {\r\n    if (player !== \"\") {   \r\n      switch (event.key) {\r\n        case \"ArrowLeft\":\r\n          if (player.movement < 0) player.stop();\r\n          break;\r\n        case \"ArrowRight\":\r\n          if (player.movement > 0) player.stop();\r\n          break;\r\n        default:\r\n      }\r\n    }    \r\n  });\r\n  \r\n  \r\n  function gameLoop(timestamp) {\r\n    let deltatime = timestamp - lastTime;\r\n    lastTime = timestamp;\r\n    if (ctx !== \"\") {\r\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n      // load backgrond img\r\n      let background = document.getElementById(\"backgroundImage\");\r\n      if (backgroundLoaded === 0) {\r\n        background.addEventListener('load', e => {\r\n          if (ctx) {\r\n            ctx.drawImage(background, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n            backgroundLoaded = 1;\r\n          }          \r\n        });\r\n      } else {\r\n        ctx.drawImage(background, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n      }\r\n\r\n      if (player !== \"\") {\r\n        player.update(deltatime, goodBlocks, badBlocks, menu);\r\n        player.draw(ctx);\r\n      } \r\n      \r\n      for (let i = 0; i < badBlocks.length; i++) {\r\n        badBlocks[i].draw(ctx);\r\n      }    \r\n      for (let i = 0; i < goodBlocks.length; i++) {\r\n        goodBlocks[i].draw(ctx);\r\n      } \r\n      menu.draw(ctx);\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n\r\n  function reset() {\r\n    console.log(\"reset\");\r\n    window.location.reload(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Dora\">    \r\n\r\n      <audio id=\"backgroundMusic\" controls src={backgroundMusic}></audio>\r\n      <audio id=\"gameOverMusic\" controls src={gameOverMusic}></audio>\r\n\r\n      <h3 id=\"headingID\">test</h3>\r\n      <h4 id=\"scoreID\">Score:</h4>\r\n      <canvas id=\"gameScreen\" width=\"800\" height=\"800\"></canvas>\r\n      <img id=\"dora1\" src={dora1} style={{display:\"none\"}} alt=\"dora\" height=\"100\" width=\"70\"></img>\r\n      <img id=\"doraRight\" src={doraRight} style={{display:\"none\"}} alt=\"doraRight\" height=\"100\" width=\"70\"></img>\r\n      <img id=\"doraLeft\" src={doraLeft} style={{display:\"none\"}} alt=\"doraLeft\" height=\"100\" width=\"70\"></img>\r\n      <img id=\"floor\" src={floor} style={{display:\"none\"}} alt=\"floor\" ></img>\r\n      <img id=\"floorBad\" src={floorBad} style={{display:\"none\"}} alt=\"floorbad\" ></img>\r\n      <img id=\"backgroundImage\" src={backgroundImage} style={{display:\"none\"}} alt=\"backgroundimage\" ></img>\r\n      <br />\r\n      <button onClick={reset}>Play Again?</button>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dora;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Flappy from './Flappy';\nimport Dora from './Dora';\n\nconst App = () => {\n  \n  return (\n    <div className=\"App\">    \n      <Switch>\n        <Route path=\"/\" component={Dora} exact/>\n        <Route path=\"/Dora\" component={Dora} />\n        <Route path=\"/Flappy\" component={Flappy} />\n      </Switch>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>  \n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}