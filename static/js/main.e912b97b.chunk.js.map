{"version":3,"sources":["img/dora1.png","img/doraLeft.png","img/doraRight.png","img/floor.png","img/floorBad.png","img/forest.png","snd/backgroundMusic.mp3","snd/gameOver.mp3","snd/pop.mp3","snd/fall.mp3","App.js","reportWebVitals.js","index.js"],"names":["CANVAS_HEIGHT","CANVAS_WIDTH","BlockGood","factor","this","width","height","position","x","y","answer","Math","floor","random","img","document","getElementById","loaded","ctx","addEventListener","e","drawImage","txt","font","fillStyle","fillText","BlockBad","id","hit","colour","imgGood","imgBad","Menu","gameState","rect","fill","textAlign","Player","imageStill","imageLeft","imageRight","image","speed","movement","gravity","gravitySpeed","onPlatform","buffer","score","printTest","deltatime","goodBlocks","badBlocks","menu","i","length","abs","imgSrc","tmp","innerHTML","Audio","jumpSFX","play","console","log","pause","fallSFX","App","canvas","player","backgroundLoaded","lastTime","useEffect","backgroundMusic","loop","getContext","draw","lastBlockX","lastBlockY","block","b","xVar","push","intersects","c","startGame","event","key","moveLeft","moveRight","jump","stop","requestAnimationFrame","gameLoop","timestamp","clearRect","background","update","className","controls","src","gameOverMusic","dora1","style","display","alt","doraRight","doraLeft","floorBad","backgroundImage","onClick","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e912b97b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dora1.26d2b5e5.png\";","export default __webpack_public_path__ + \"static/media/doraLeft.1f2dd769.png\";","export default __webpack_public_path__ + \"static/media/doraRight.48b4e079.png\";","export default __webpack_public_path__ + \"static/media/floor.3c58318d.png\";","export default __webpack_public_path__ + \"static/media/floorBad.f523f4c3.png\";","export default __webpack_public_path__ + \"static/media/forest.4084e9ae.png\";","export default __webpack_public_path__ + \"static/media/backgroundMusic.e69518ac.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.ecaf1372.mp3\";","export default __webpack_public_path__ + \"static/media/pop.5b688e1e.mp3\";","export default __webpack_public_path__ + \"static/media/fall.c2c56b90.mp3\";","import React, {useEffect} from 'react';\nimport './App.css';\nimport dora1 from './img/dora1.png';\nimport doraLeft from './img/doraLeft.png';\nimport doraRight from './img/doraRight.png';\nimport floor from './img/floor.png';\nimport floorBad from './img/floorBad.png';\nimport backgroundImage from './img/forest.png';\nimport backgroundMusic from './snd/backgroundMusic.mp3';\nimport gameOverMusic from './snd/gameOver.mp3';\nimport jumpSFX from './snd/pop.mp3';\nimport fallSFX from './snd/fall.mp3';\n\nconst CANVAS_HEIGHT = 800;\nconst CANVAS_WIDTH = 800;\n\nclass BlockGood {\n  constructor(factor) {\n    this.width = 160;\n    this.height = 30;\n    this.position = {\n      x: 0,\n      y: 0//posY - this.height\n    }\n    this.answer = (Math.floor(Math.random() * 12) + 1) * factor;\n    this.img = document.getElementById(\"floor\");\n    this.loaded = 0;\n  }\n\n  draw(ctx) {\n    // ctx.fillStyle = (\"rgb(0, 0, 0)\");\n    // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    //let txt = (Math.floor(Math.random() * 12) + 1) * factor;\n    this.img.addEventListener('load', e => {\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);\n      this.loaded += 1;\n    });\n    if (this.loaded !== 0) {\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);      \n      let txt = this.answer;\n      ctx.font = (this.height-10) + \"px Arial\";\n      ctx.fillStyle = \"white\";\n      ctx.fillText(txt, this.position.x + 60, this.position.y + 24)\n    }\n  }\n}\n\nclass BlockBad {\n  constructor(factor) {\n    this.width = 160;\n    this.height = 30;\n    this.id = 0;\n    this.hit = 0;\n    this.position = {\n      x: 0,\n      y: 0\n    }    \n    this.colour = \"rgb(0, 0, 0)\";\n    this.answer = (Math.floor(Math.random() * 12) + 1) * factor + Math.floor(Math.random() * (factor-2) + 1);\n    this.imgGood = document.getElementById(\"floor\");\n    this.imgBad = document.getElementById(\"floorBad\");\n    this.img = this.imgGood;\n    this.loaded = 0;\n  }\n\n  draw(ctx) {\n    this.img.addEventListener('load', e => {\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);\n      this.loaded += 1;\n    });\n    if (this.loaded !== 0) {\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);      \n      let txt = this.answer;\n      ctx.font = (this.height-10) + \"px Arial\";\n      ctx.fillStyle = \"white\";\n      ctx.fillText(txt, this.position.x + 60, this.position.y + 24)\n    }\n  }    \n}\n\nclass Menu {\n  constructor() {\n    this.gameState = 0;    \n  }\n  draw (ctx) {\n    if (this.gameState === -1) {\n      ctx.rect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n      ctx.fill();\n\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"white\";\n      ctx.textAlign = \"center\";\n      ctx.fillText(\"GAME OVER\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\n    }\n  }\n}\n\nclass Player {\n  constructor() {\n    this.imageStill = document.getElementById(\"dora1\");\n    this.imageLeft = document.getElementById(\"doraLeft\");\n    this.imageRight = document.getElementById(\"doraRight\");\n    this.image = this.imageStill;\n    this.width = this.image.width;\n    this.height = this.image.height;\n    this.position = {\n      x: 200,\n      y: CANVAS_HEIGHT-5 - this.height\n    }\n    this.speed = 5;\n    this.movement = 0;\n    this.gravity = 0.2;\n    this.gravitySpeed = 0;\n    this.onPlatform = 0;\n    this.buffer = 1;\n    this.loaded = 1;\n\n    this.score = 0;\n    \n    this.printTest = 0;\n    // https://static.wikia.nocookie.net/doratheexplorer/images/1/10/3.png/revision/latest?cb=20160704175809\n    \n  }\n\n  draw(ctx) {\n    this.imageStill.addEventListener('load', e => {\n      ctx.drawImage(this.imageStill, this.position.x, this.position.y, this.width, this.height);      \n      this.loaded += 1;\n    });\n    this.imageLeft.addEventListener('load', e => {\n      ctx.drawImage(this.imageLeft, this.position.x, this.position.y, this.width, this.height);      \n      this.loaded += 1;\n    });\n    this.imageRight.addEventListener('load', e => {\n      ctx.drawImage(this.imageRight, this.position.x, this.position.y, this.width, this.height);      \n      this.loaded += 1;\n      \n    });\n    if (this.loaded !== 0) {\n      ctx.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\n    }\n  }\n\n  update(deltatime, goodBlocks, badBlocks, menu) {\n    if (menu.gameState !== -1) {\n      // left/right player movement\n      this.position.x += this.movement;    \n      if (this.position.x + this.width > CANVAS_WIDTH) {\n        this.position.x = CANVAS_WIDTH - this.width;\n      }\n      if (this.position.x < 0) {\n        this.position.x = 0;\n      }\n    }    \n\n    if (menu.gameState === 1) {\n      this.position.y += 1;\n      for (let i = 0; i < goodBlocks.length; i++) {\n        // check if player has landed on a block\n        if (this.position.x + this.width > goodBlocks[i].position.x \n          && this.position.x < goodBlocks[i].position.x + goodBlocks[i].width\n          && Math.abs(this.position.y + this.height - goodBlocks[i].position.y) < 15\n          && (this.gravitySpeed > 0 || this.onPlatform === 1)\n        ) {\n          this.imgSrc = \"still\";\n          this.onPlatform = 1;\n          this.gravitySpeed = 0;\n          this.position.y = goodBlocks[i].position.y - this.height - this.buffer;\n          let tmp = goodBlocks[0]\n          goodBlocks[0] = goodBlocks[i];\n          goodBlocks[i] = tmp;\n          i = goodBlocks.length; \n        } else {\n          this.onPlatform = 0;\n        }\n      }\n\n      // move each block down\n      for (let i = 0; i < goodBlocks.length; i++) {\n        goodBlocks[i].position.y += 1;\n        if (goodBlocks[i].position.y > CANVAS_HEIGHT) {\n          this.score += 1;\n          document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\n          goodBlocks[i].position.y = -goodBlocks[i].height;\n        }\n      }\n  \n      // check if player steps on bad block\n      for (let i = 0; i < badBlocks.length; i++) {\n        badBlocks[i].position.y += 1;\n        if (this.position.x + this.width > badBlocks[i].position.x \n          && this.position.x < badBlocks[i].position.x + badBlocks[i].width\n          && Math.abs(this.position.y + this.height - badBlocks[i].position.y) < 15\n          && this.gravitySpeed > 0\n        ) {\n          if (badBlocks[i].hit === 0) {\n            badBlocks[i].hit = 1;            \n            //badBlocks[i].colour = \"rgb(255, 0, 0)\";\n            badBlocks[i].img = badBlocks[i].imgBad;\n            let a = new Audio(jumpSFX);\n            a.play();\n            i = 0;\n          }\n        }\n      }\n\n      \n      // make player fall\n      if (this.onPlatform === 0) {\n        this.gravitySpeed += this.gravity;\n        this.position.y += this.gravitySpeed;\n        if (this.gravitySpeed > 0) {\n          if (this.position.y > CANVAS_HEIGHT - this.height) { // hit the ground (bottom of screen)\n            this.score += 1;\n            document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\n            this.position.y = CANVAS_HEIGHT-5 - this.height;\n            this.gravitySpeed = 0; \n            menu.gameState = -1; // game over\n            console.log(\"game over\");  \n            let backgroundMusic = document.getElementById(\"backgroundMusic\");\n            backgroundMusic.pause();    \n            let gameOver = document.getElementById(\"gameOverMusic\");\n            gameOver.play();\n          }\n        }        \n      } else {\n        this.gravitySpeed = 0;\n      }\n  \n      // make bad blocks fall\n      for (let i = 0; i < badBlocks.length; i++) {\n        if (badBlocks[i].hit !== 0) {\n          if (badBlocks[i].hit > 10) {\n            badBlocks[i].hit = 10;\n          }\n          badBlocks[i].position.y += badBlocks[i].hit;\n          badBlocks[i].hit += 1;\n        }      \n        if (badBlocks[i].position.y > CANVAS_HEIGHT) {\n          this.score += 1;\n          document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\n          badBlocks[i].position.y = -badBlocks[i].height;\n          badBlocks[i].hit = 0;\n          //badBlocks[i].colour = \"rgb(0, 0, 0)\";\n          badBlocks[i].img = badBlocks[i].imgGood;\n        }\n      }\n    }\n  }\n\n  moveLeft() {\n    this.movement = -this.speed;\n    this.image = this.imageLeft;\n  }\n\n  moveRight() {\n    this.movement = this.speed;\n    this.image = this.imageRight;\n  }\n\n  jump(menu) {    \n    if (menu.gameState !== -1) {\n      //this.imgSrc = \"img/dora2.png\";\n      this.onPlatform = 0;\n      if (this.gravitySpeed === 0) { // prevents spamming \n        this.gravitySpeed = -8;\n        let a = new Audio(fallSFX);\n        a.play();\n      }\n      menu.gameState = 1;\n    }    \n  }\n\n  stop() {\n    this.movement = 0;\n    this.image = this.imageStill;\n  }\n}\n\nconst App = () => {\n  \n  let player = \"\";\n  let menu = \"\";\n  let canvas, ctx = \"\";\n  let goodBlocks = [];\n  let badBlocks = [];\n  let factor = Math.floor(Math.random() * 11) + 2; // 2 - 12\n  let backgroundLoaded = 0;\n  let lastTime = 0;\n\n  useEffect(() => { \n    //let backgroundMusic = new Audio(\"http://codeskulptor-demos.commondatastorage.googleapis.com/descent/background%20music.mp3\");\n    let backgroundMusic = document.getElementById(\"backgroundMusic\");\n    backgroundMusic.play();\n    backgroundMusic.loop = true;\n    console.log(\"beginning v 1.20\");\n    factor = Math.floor(Math.random() * 11) + 2; // 2 - 12\n    document.getElementById(\"headingID\").innerHTML = \"Which numbers are divisible by \" + factor;\n    document.getElementById(\"scoreID\").innerHTML = \"Score:\";\n    goodBlocks = [];\n    badBlocks = [];\n    backgroundLoaded = 0;\n    lastTime = 0;\n    player = \"\";\n    menu = \"\";\n    startGame();\n  });\n\n  function startGame() {\n    canvas = document.getElementById(\"gameScreen\");\n    ctx = canvas.getContext(\"2d\");\n    player = new Player();    \n    menu = new Menu(); \n    player.draw(ctx);\n    \n    console.log(\"starting\");\n    \n    let lastBlockX = CANVAS_WIDTH/2;\n    let lastBlockY = CANVAS_HEIGHT;\n\n    for (let block = 0; block < 8; block++) {\n      let b = new BlockGood(factor);\n      let xVar = Math.floor(Math.random() * 120) + 60;\n      if (Math.floor(Math.random() * 10) % 2 === 0) {\n        xVar *= -1;\n      }\n      if (lastBlockX + xVar < 0) {\n        lastBlockX -= xVar;\n      } else if (lastBlockX + xVar + b.width > CANVAS_WIDTH) {\n        lastBlockX -= xVar;\n      } else {\n        lastBlockX += xVar;\n      }\n\n      let yVar = Math.floor(Math.random() * 30) + 90;\n      lastBlockY -= yVar;\n      b.position.x = lastBlockX;\n      b.position.y = lastBlockY - b.height;\n      goodBlocks.push(b)\n    }\n    \n    for (let block = 0; block < 10; block++) {\n      let b = new BlockBad(factor);\n      b.position.x = Math.floor(Math.random() * (CANVAS_WIDTH - b.width) + 10) + 5;\n      b.position.y = Math.floor(Math.random() * (CANVAS_HEIGHT - b.height) - 10) + 5;\n      // check blocks do not intersect\n      let intersects = 0;\n      for (let c = 0; c < goodBlocks.length; c++) {\n        if (b.position.x > goodBlocks[c].position.x - goodBlocks[c].width\n          && b.position.x < goodBlocks[c].position.x + goodBlocks[c].width\n          && b.position.y > goodBlocks[c].position.y - goodBlocks[c].height\n          && b.position.y < goodBlocks[c].position.y + goodBlocks[c].height\n        ) {\n          intersects = 1;\n          c = goodBlocks.length;\n        }\n      }\n      if (intersects === 0) {\n        for (let c = 0; c < badBlocks.length; c++) {\n          if (b.position.x > badBlocks[c].position.x - badBlocks[c].width\n            && b.position.x < badBlocks[c].position.x + badBlocks[c].width\n            && b.position.y > badBlocks[c].position.y - badBlocks[c].height\n            && b.position.y < badBlocks[c].position.y + badBlocks[c].height\n          ) {\n            intersects = 1;\n          }\n        }\n      }\n      if (intersects === 1) {\n        block -= 1;\n      } else {\n        badBlocks.push(b);\n      }\n    }\n  }\n\n  document.addEventListener(\"keydown\", event => {\n    if (player !== \"\") {    \n      switch (event.key) {          \n        case \"ArrowLeft\":\n          player.moveLeft();\n          break;\n        case \"ArrowRight\":\n          player.moveRight();\n          break;\n        case \" \":\n          player.jump(menu);\n          break;\n        default:\n      }\n    }\n  });\n  \n  document.addEventListener(\"keyup\", event => {\n    if (player !== \"\") {   \n      switch (event.key) {\n        case \"ArrowLeft\":\n          if (player.movement < 0) player.stop();\n          break;\n        case \"ArrowRight\":\n          if (player.movement > 0) player.stop();\n          break;\n        default:\n      }\n    }    \n  });\n  \n  \n  function gameLoop(timestamp) {\n    let deltatime = timestamp - lastTime;\n    lastTime = timestamp;\n    if (ctx !== \"\") {\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      // load backgrond img\n      let background = document.getElementById(\"backgroundImage\");\n      if (backgroundLoaded === 0) {\n        background.addEventListener('load', e => {\n          ctx.drawImage(background, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n          backgroundLoaded = 1;\n        });\n      } else {\n        ctx.drawImage(background, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      }\n\n      if (player !== \"\") {\n        player.update(deltatime, goodBlocks, badBlocks, menu);\n        player.draw(ctx);\n      } \n      \n      for (let i = 0; i < badBlocks.length; i++) {\n        badBlocks[i].draw(ctx);\n      }    \n      for (let i = 0; i < goodBlocks.length; i++) {\n        goodBlocks[i].draw(ctx);\n      } \n      menu.draw(ctx);\n    }\n    requestAnimationFrame(gameLoop);\n  }\n  requestAnimationFrame(gameLoop);\n\n  function reset() {\n    console.log(\"reset\");\n    window.location.reload(true);\n  }\n\n  return (\n    <div className=\"App\">    \n      <audio id=\"backgroundMusic\" controls src={backgroundMusic}></audio>\n      <audio id=\"gameOverMusic\" controls src={gameOverMusic}></audio>\n\n      <h3 id=\"headingID\">test</h3>\n      <h4 id=\"scoreID\">Score:</h4>\n      <canvas id=\"gameScreen\" width=\"800\" height=\"800\"></canvas>\n      <img id=\"dora1\" src={dora1} style={{display:\"none\"}} alt=\"dora\" height=\"100\" width=\"70\"></img>\n      <img id=\"doraRight\" src={doraRight} style={{display:\"none\"}} alt=\"doraRight\" height=\"100\" width=\"70\"></img>\n      <img id=\"doraLeft\" src={doraLeft} style={{display:\"none\"}} alt=\"doraLeft\" height=\"100\" width=\"70\"></img>\n      <img id=\"floor\" src={floor} style={{display:\"none\"}} alt=\"floor\" ></img>\n      <img id=\"floorBad\" src={floorBad} style={{display:\"none\"}} alt=\"floorbad\" ></img>\n      <img id=\"backgroundImage\" src={backgroundImage} style={{display:\"none\"}} alt=\"backgroundimage\" ></img>\n      <br />\n      <button onClick={reset}>Play Again?</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}