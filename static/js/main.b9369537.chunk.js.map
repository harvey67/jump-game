{"version":3,"sources":["img/potter.png","Flappy.js","img/dora1.png","img/doraLeft.png","img/doraRight.png","img/floor.png","img/floorBad.png","img/forest.png","snd/backgroundMusic.mp3","snd/gameOver.mp3","snd/pop.mp3","snd/fall.mp3","Dora.js","App.js","reportWebVitals.js","index.js"],"names":["CANVAS_HEIGHT","CANVAS_WIDTH","SPEED","ANSWER","SCORE","SHOW_RESULTS","randomNum","a","b","Math","floor","random","Game","this","gameState","Player","width","height","position","x","y","transform","gravityDeceleration","jumpBoost","stop","rotation","direction","x1","y1","h1","k1","ctx","save","sin","PI","cos","buffer","imgSrc","document","getElementById","drawImage","restore","deltaTime","Obstacle","tops","heights","speed","positionX","window","correct","answerCorrect","answerIncorrect","i","length","fillStyle","fillRect","font","fillText","create","innerHTML","Flappy","console","log","game","btns","getElementsByClassName","disabled","player","addEventListener","event","key","jump","canvas","getContext","draw","clearRect","Promise","resolve","setTimeout","allObstacles","requestAnimationFrame","timestamp","gameLoop","useEffect","lastTime","deltatime","update","passed","collisionCheck","style","display","className","id","paddingRight","onClick","startGame","alt","src","potter","BlockGood","factor","answer","img","loaded","e","txt","BlockBad","hit","colour","imgGood","imgBad","Menu","rect","fill","textAlign","imageStill","imageLeft","imageRight","image","movement","gravity","gravitySpeed","onPlatform","score","printTest","goodBlocks","badBlocks","menu","abs","tmp","Audio","jumpSFX","play","pause","fallSFX","Dora","backgroundLoaded","background","backgroundMusic","loop","lastBlockX","lastBlockY","block","xVar","push","intersects","c","moveLeft","moveRight","controls","gameOverMusic","dora1","doraRight","doraLeft","floorBad","backgroundImage","location","reload","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b9369537.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/potter.0ed17711.png\";","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport potter from './img/potter.png';\r\n\r\nconst CANVAS_HEIGHT = 800;\r\nconst CANVAS_WIDTH = 1500;\r\n// const GRAVITY = 0.125;\r\nconst GRAVITY = 0.2;\r\nconst OBSTACLE_WIDTH = 40;\r\nconst playerX = 200; //0.2*CANVAS_WIDTH;\r\n\r\nlet SPEED = 12;\r\nlet ANSWER = 1;\r\nlet SCORE = 0;\r\nlet SHOW_RESULTS = false;\r\n\r\nfunction randomNum(a, b) {\r\n    return Math.floor(Math.random() * b) + a; \r\n}\r\n\r\nclass Game {\r\n    constructor() {\r\n        this.gameState = 0;\r\n    }\r\n}\r\n\r\nclass Player {\r\n    constructor() {\r\n        this.width = 110;\r\n        this.height = 100;\r\n        this.position = {\r\n            x: playerX,\r\n            y: 0.5*CANVAS_HEIGHT\r\n        }\r\n        this.transform = {\r\n            x: playerX,\r\n            y: 0.5*CANVAS_HEIGHT\r\n        }\r\n        this.gravityDeceleration = 0;\r\n        this.jumpBoost = 0;\r\n        this.stop = 0;\r\n        this.rotation = 0;\r\n        this.direction = 1;\r\n        this.x1 = 0;\r\n        this.y1 = 0;\r\n        this.h1 = 0;\r\n        this.k1 = 0;\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.save();\r\n        \r\n        let upTilt = -50;\r\n        let downTilt = 80;\r\n\r\n        this.rotation += this.direction;\r\n        this.direction += 0.5;\r\n        if (this.direction > 1) {\r\n            this.direction = 1;\r\n        }\r\n\r\n        if (this.rotation > downTilt) {\r\n            this.rotation = downTilt;\r\n        }\r\n        if (this.rotation < upTilt) {\r\n            this.rotation = upTilt;\r\n        }\r\n\r\n        var sin = Math.sin(this.rotation * Math.PI / 180);\r\n        var cos = Math.cos(this.rotation * Math.PI / 180);\r\n\r\n        let buffer = 40;\r\n        this.y1 = buffer;\r\n        this.h1 = this.height*Math.cos(this.rotation * Math.PI/180) + this.width*Math.sin(this.rotation * Math.PI/180) - buffer;\r\n        this.x1 = this.height*Math.cos((90 - this.rotation) * Math.PI/180) - buffer;\r\n        this.k1 = this.width*Math.cos(this.rotation * Math.PI/180) + this.height*Math.sin(this.rotation * Math.PI/180) - buffer;\r\n        if (this.rotation < 0) {\r\n            this.y1 = this.width*Math.cos((90 - this.rotation) * Math.PI/180) + buffer;\r\n            this.h1 = this.height*Math.cos(this.rotation * Math.PI/180) - this.width*Math.sin(this.rotation * Math.PI/180) - 1.5*buffer;\r\n            this.x1 = -buffer;\r\n            this.k1 = this.width*Math.cos(this.rotation * Math.PI/180) - this.height*Math.sin(this.rotation * Math.PI/180) - 1.5*buffer;\r\n        }\r\n        this.position.x = this.transform.x - this.x1 - 50;\r\n        this.position.y = this.transform.y + this.y1;\r\n        // ctx.fillRect(this.position.x, this.position.y, this.k1, this.h1); // hit detection\r\n\r\n        ctx.transform(cos, sin, -sin, cos, this.transform.x - this.width*cos/2, this.transform.y);\r\n\r\n        let imgSrc = document.getElementById(\"spriteID\");\r\n        ctx.drawImage(imgSrc, 0, 0, this.width, this.height);\r\n        ctx.restore();\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.gravityDeceleration += GRAVITY;\r\n        this.transform.y += this.gravityDeceleration;\r\n    }\r\n\r\n    jump() {\r\n        this.gravityDeceleration = -6;\r\n        this.direction = -7;\r\n        this.gravityDeceleration = -4;\r\n    }\r\n\r\n}\r\n\r\nclass Obstacle {\r\n    constructor() {\r\n        this.tops = [0, 10, 20, 30, 40];\r\n        this.heights = [10, 10, 10, 10, 10];\r\n        this.speed = 10;\r\n        this.positionX = CANVAS_WIDTH *.8;        \r\n        this.window = 200;\r\n        this.correct = 1;\r\n    }\r\n\r\n    create() {\r\n        this.tops[0] = 0;\r\n        this.tops[1] = randomNum(CANVAS_HEIGHT*0.05, CANVAS_HEIGHT*0.2);\r\n        this.tops[2] = this.tops[1] + this.window;\r\n        this.tops[3] = this.tops[2] + randomNum(CANVAS_HEIGHT*0.1, CANVAS_HEIGHT*0.15);\r\n        this.tops[4] = this.tops[3] + this.window;\r\n        this.correct = 1 + 2*(randomNum(1, 2)-1); // 1 or 3\r\n        \r\n        this.answerCorrect = ANSWER * randomNum(2, 9);\r\n        this.answerIncorrect = ANSWER * randomNum(2, 9) + randomNum(1, ANSWER-1);\r\n    }\r\n\r\n    draw(ctx) {\r\n        for (let i = 0; i < this.tops.length; i++) {\r\n            ctx.fillStyle = \"rgb(100, 100, 100)\";\r\n            if (i === 1 || i === 3) {                \r\n                ctx.fillStyle = \"white\";\r\n                if (SHOW_RESULTS) {\r\n                    ctx.fillStyle = \"red\";\r\n                }\r\n            }\r\n            if (i === this.correct && SHOW_RESULTS) {\r\n                ctx.fillStyle = \"green\";\r\n            }\r\n            if (i+1 < this.tops.length) {\r\n                ctx.fillRect(this.positionX, this.tops[i], OBSTACLE_WIDTH, this.tops[i+1] - this.tops[i]);\r\n            } else {\r\n                ctx.fillRect(this.positionX, this.tops[i], OBSTACLE_WIDTH, CANVAS_HEIGHT - this.tops[i]);\r\n            }\r\n\r\n            // draw scores\r\n            if (i === 1 || i === 3) { \r\n                ctx.fillStyle = \"blue\";\r\n                ctx.font = \"30px Verdana\";\r\n                if (i === this.correct) {\r\n                    ctx.fillText(this.answerCorrect, this.positionX, this.tops[i] + this.window/2);\r\n                } else {\r\n                    ctx.fillText(this.answerIncorrect, this.positionX, this.tops[i] + this.window/2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update(deltaTime) {\r\n        this.positionX -= SPEED;\r\n        if (this.positionX + OBSTACLE_WIDTH < 0) {\r\n            this.positionX = CANVAS_WIDTH;\r\n            this.create();\r\n        }\r\n        SCORE += SPEED;\r\n        document.getElementById(\"scoreID\").innerHTML = \"Score: \" + SCORE;\r\n    }\r\n}\r\n\r\n\r\nconst Flappy = () => {\r\n\r\n    useEffect(() => {\r\n    });\r\n    \r\n    function collisionCheck(game, player, allObstacles, ctx) {\r\n        if (player.transform.y > CANVAS_HEIGHT) {\r\n            player.transform.y = CANVAS_HEIGHT;\r\n            game.gameState = -1;\r\n        }\r\n\r\n        let passed = true;\r\n        if (player.position.x + player.k1 > allObstacles.positionX\r\n            && player.position.x < allObstacles.positionX + OBSTACLE_WIDTH) {\r\n                passed = false;\r\n                if (player.position.y > allObstacles.tops[allObstacles.correct]\r\n                    && player.position.y + player.h1 < allObstacles.tops[allObstacles.correct] + allObstacles.window) {\r\n                        passed = true;\r\n                }\r\n        }\r\n\r\n        if (passed === false) {\r\n            game.gameState = -1;\r\n            SHOW_RESULTS = true;\r\n            // document.getElementById(\"testID\").innerHTML = \"HIT\";\r\n            allObstacles.draw(ctx);\r\n        } else {\r\n            // document.getElementById(\"testID\").innerHTML = \"MISS\";\r\n        }\r\n        \r\n    }\r\n\r\n    async function startGame() {\r\n        console.log(\"game has begun, speed is \" + SPEED);\r\n        document.getElementById(\"gameScreen\").width = CANVAS_WIDTH;\r\n        document.getElementById(\"gameScreen\").height = CANVAS_HEIGHT;\r\n        document.getElementById(\"speedID\").innerHTML = \"Speed: \" + SPEED;\r\n        // let canvas = document.getElementById(\"gameScreen\");\r\n        // let ctx = canvas.getContext(\"2d\");\r\n        \r\n        let game = new Game();\r\n        game.gameState = 1;\r\n\r\n        let btns = document.getElementsByClassName(\"speedBtn\");\r\n        for (let i = 0; i < btns.length; i++) {\r\n            btns[i].disabled = true;\r\n        }\r\n\r\n        let player = new Player();\r\n        // let player = new TestPlayer();\r\n\r\n        document.addEventListener(\"keydown\", event => {\r\n            switch (event.key) {\r\n                case \" \":\r\n                    //player.jumpBoost = 1;\r\n                    player.jump();\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n\r\n        let canvas = document.getElementById(\"gameScreen\");\r\n        canvas.addEventListener(\"click\", function() { player.jump() });\r\n        let ctx = canvas.getContext(\"2d\");\r\n        player.draw(ctx);\r\n\r\n        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        ctx.font = \"60px Verdana\";\r\n        ctx.fillText(\"Multiples of \" + ANSWER, CANVAS_WIDTH*0.2, CANVAS_HEIGHT/2);\r\n        \r\n        // delay for 1500 milliseconds\r\n        await new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve(2);\r\n            }, 1500);\r\n        });\r\n\r\n        let allObstacles = new Obstacle();\r\n        allObstacles.create();\r\n\r\n        requestAnimationFrame(\r\n            function(timestamp) {\r\n                gameLoop(timestamp, ctx, game, player, allObstacles);\r\n            }\r\n        );\r\n    }\r\n\r\n    function makeQuestion() {\r\n        ANSWER = randomNum(2, 10);\r\n        document.getElementById(\"questionID\").innerHTML = \"Question: which numbers are multiples of \" + ANSWER + \"?\";        \r\n    }\r\n\r\n    let lastTime = 0;\r\n    function gameLoop(timestamp, ctx, game, player, allObstacles) {\r\n        if (game.gameState === 1) {\r\n\r\n            let deltatime = timestamp - lastTime;\r\n            lastTime = timestamp;\r\n            ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n            ctx.font = \"60px Verdana\";\r\n            ctx.fillText(\"Multiples of \" + ANSWER, CANVAS_WIDTH*0.2, CANVAS_HEIGHT/2);\r\n\r\n            allObstacles.update(deltatime);\r\n            allObstacles.draw(ctx);\r\n\r\n            player.update(deltatime);\r\n            player.draw(ctx);\r\n\r\n            requestAnimationFrame(\r\n                function(timestamp) {\r\n                    gameLoop(timestamp, ctx, game, player, allObstacles);\r\n                }\r\n            );\r\n\r\n            collisionCheck(game, player, allObstacles, ctx);\r\n\r\n        } else {\r\n            console.log(\"game over\");\r\n            document.getElementById(\"resetBtn\").style.display = \"block\";\r\n            let btns = document.getElementsByClassName(\"speedBtn\");\r\n            for (let i = 0; i < btns.length; i++) {\r\n                btns[i].disabled = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function reset() {\r\n        SCORE = 0;\r\n        console.log(\"reset\");\r\n        document.getElementById(\"resetBtn\").style.display = \"none\";\r\n        SHOW_RESULTS = false;\r\n        makeQuestion();\r\n        // setTimeout(startGame, 1500);\r\n        startGame();\r\n    }\r\n\r\n    function decreaseSpeed() {\r\n        SPEED--;\r\n        if (SPEED < 0) {\r\n            SPEED = 0;\r\n        }\r\n        document.getElementById(\"speedID\").innerHTML = \"Speed: \" + SPEED;\r\n    }\r\n\r\n    function increaseSpeed() {\r\n        SPEED++;\r\n        if (SPEED > 20) {\r\n            SPEED = 20;\r\n        }\r\n        document.getElementById(\"speedID\").innerHTML = \"Speed: \" + SPEED;\r\n    }\r\n\r\n    return ( \r\n        <div className=\"Flappy\">\r\n            <h4 id=\"questionID\" style={{display: \"inline\", paddingRight:\"400px\"}}>Question</h4>\r\n            <h4 id=\"scoreID\" style={{display: \"inline\"}}>Score: 0</h4>\r\n            <br />\r\n            <br />\r\n            <canvas id=\"gameScreen\" width=\"800\" height=\"800\"></canvas>\r\n            <br />\r\n            <button id=\"resetBtn\" onClick={reset}>Play Again?</button>\r\n            <p id=\"testID\"></p>\r\n\r\n            <button className=\"speedBtn\" onClick={decreaseSpeed} style={{display: \"inline\"}}>-</button>\r\n            <p id=\"speedID\" style={{display: \"inline\"}}>Speed:</p>\r\n            <button className=\"speedBtn\" onClick={increaseSpeed} style={{display: \"inline\"}}>+</button>\r\n            <img id=\"spriteID\" alt=\"potter\" src={potter} style={{display:\"none\"}}></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Flappy;","export default __webpack_public_path__ + \"static/media/dora1.26d2b5e5.png\";","export default __webpack_public_path__ + \"static/media/doraLeft.1f2dd769.png\";","export default __webpack_public_path__ + \"static/media/doraRight.48b4e079.png\";","export default __webpack_public_path__ + \"static/media/floor.3c58318d.png\";","export default __webpack_public_path__ + \"static/media/floorBad.f523f4c3.png\";","export default __webpack_public_path__ + \"static/media/forest.4084e9ae.png\";","export default __webpack_public_path__ + \"static/media/backgroundMusic.e69518ac.mp3\";","export default __webpack_public_path__ + \"static/media/gameOver.ecaf1372.mp3\";","export default __webpack_public_path__ + \"static/media/pop.5b688e1e.mp3\";","export default __webpack_public_path__ + \"static/media/fall.c2c56b90.mp3\";","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport dora1 from './img/dora1.png';\r\nimport doraLeft from './img/doraLeft.png';\r\nimport doraRight from './img/doraRight.png';\r\nimport floor from './img/floor.png';\r\nimport floorBad from './img/floorBad.png';\r\nimport backgroundImage from './img/forest.png';\r\nimport backgroundMusic from './snd/backgroundMusic.mp3';\r\nimport gameOverMusic from './snd/gameOver.mp3';\r\nimport jumpSFX from './snd/pop.mp3';\r\nimport fallSFX from './snd/fall.mp3';\r\n\r\nconst CANVAS_HEIGHT = 800;\r\nconst CANVAS_WIDTH = 800;\r\n\r\nclass BlockGood {\r\n  constructor(factor) {\r\n    this.width = 160;\r\n    this.height = 30;\r\n    this.position = {\r\n      x: 0,\r\n      y: 0//posY - this.height\r\n    }\r\n    this.answer = (Math.floor(Math.random() * 12) + 1) * factor;\r\n    this.img = document.getElementById(\"floor\");\r\n    this.loaded = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    // ctx.fillStyle = (\"rgb(0, 0, 0)\");\r\n    // ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n    //let txt = (Math.floor(Math.random() * 12) + 1) * factor;\r\n    this.img.addEventListener('load', e => {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);\r\n      this.loaded += 1;\r\n    });\r\n    if (this.loaded !== 0) {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);      \r\n      let txt = this.answer;\r\n      ctx.font = (this.height-10) + \"px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillText(txt, this.position.x + 60, this.position.y + 24)\r\n    }\r\n  }\r\n}\r\n\r\nclass BlockBad {\r\n  constructor(factor) {\r\n    this.width = 160;\r\n    this.height = 30;\r\n    this.id = 0;\r\n    this.hit = 0;\r\n    this.position = {\r\n      x: 0,\r\n      y: 0\r\n    }    \r\n    this.colour = \"rgb(0, 0, 0)\";\r\n    this.answer = (Math.floor(Math.random() * 12) + 1) * factor + Math.floor(Math.random() * (factor-2) + 1);\r\n    this.imgGood = document.getElementById(\"floor\");\r\n    this.imgBad = document.getElementById(\"floorBad\");\r\n    this.img = this.imgGood;\r\n    this.loaded = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.img.addEventListener('load', e => {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);\r\n      this.loaded += 1;\r\n    });\r\n    if (this.loaded !== 0) {\r\n      ctx.drawImage(this.img, this.position.x, this.position.y, this.width, this.height);      \r\n      let txt = this.answer;\r\n      ctx.font = (this.height-10) + \"px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillText(txt, this.position.x + 60, this.position.y + 24)\r\n    }\r\n  }    \r\n}\r\n\r\nclass Menu {\r\n  constructor() {\r\n    this.gameState = 0;    \r\n  }\r\n  draw (ctx) {\r\n    if (this.gameState === -1) {\r\n      ctx.rect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"GAME OVER\", CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2);\r\n    }\r\n  }\r\n}\r\n\r\nclass Player {\r\n  constructor() {\r\n    this.imageStill = document.getElementById(\"dora1\");\r\n    this.imageLeft = document.getElementById(\"doraLeft\");\r\n    this.imageRight = document.getElementById(\"doraRight\");\r\n    this.image = this.imageStill;\r\n    this.width = this.image.width;\r\n    this.height = this.image.height;\r\n    this.position = {\r\n      x: 200,\r\n      y: CANVAS_HEIGHT-5 - this.height\r\n    }\r\n    this.speed = 5;\r\n    this.movement = 0;\r\n    this.gravity = 0.2;\r\n    this.gravitySpeed = 0;\r\n    this.onPlatform = 0;\r\n    this.buffer = 1;\r\n    this.loaded = 1;\r\n\r\n    this.score = 0;\r\n    \r\n    this.printTest = 0;\r\n    // https://static.wikia.nocookie.net/doratheexplorer/images/1/10/3.png/revision/latest?cb=20160704175809\r\n    \r\n  }\r\n\r\n  draw(ctx) {\r\n    this.imageStill.addEventListener('load', e => {\r\n      ctx.drawImage(this.imageStill, this.position.x, this.position.y, this.width, this.height);      \r\n      this.loaded += 1;\r\n    });\r\n    this.imageLeft.addEventListener('load', e => {\r\n      ctx.drawImage(this.imageLeft, this.position.x, this.position.y, this.width, this.height);      \r\n      this.loaded += 1;\r\n    });\r\n    this.imageRight.addEventListener('load', e => {\r\n      ctx.drawImage(this.imageRight, this.position.x, this.position.y, this.width, this.height);      \r\n      this.loaded += 1;\r\n      \r\n    });\r\n    if (this.loaded !== 0) {\r\n      ctx.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\r\n    }\r\n  }\r\n\r\n  update(deltatime, goodBlocks, badBlocks, menu) {\r\n    if (menu.gameState !== -1) {\r\n      // left/right player movement\r\n      this.position.x += this.movement;    \r\n      if (this.position.x + this.width > CANVAS_WIDTH) {\r\n        this.position.x = CANVAS_WIDTH - this.width;\r\n      }\r\n      if (this.position.x < 0) {\r\n        this.position.x = 0;\r\n      }\r\n    }    \r\n\r\n    if (menu.gameState === 1) {\r\n      this.position.y += 1;\r\n      for (let i = 0; i < goodBlocks.length; i++) {\r\n        // check if player has landed on a block\r\n        if (this.position.x + this.width > goodBlocks[i].position.x \r\n          && this.position.x < goodBlocks[i].position.x + goodBlocks[i].width\r\n          && Math.abs(this.position.y + this.height - goodBlocks[i].position.y) < 15\r\n          && (this.gravitySpeed > 0 || this.onPlatform === 1)\r\n        ) {\r\n          this.imgSrc = \"still\";\r\n          this.onPlatform = 1;\r\n          this.gravitySpeed = 0;\r\n          this.position.y = goodBlocks[i].position.y - this.height - this.buffer;\r\n          let tmp = goodBlocks[0]\r\n          goodBlocks[0] = goodBlocks[i];\r\n          goodBlocks[i] = tmp;\r\n          i = goodBlocks.length; \r\n        } else {\r\n          this.onPlatform = 0;\r\n        }\r\n      }\r\n\r\n      // move each block down\r\n      for (let i = 0; i < goodBlocks.length; i++) {\r\n        goodBlocks[i].position.y += 1;\r\n        if (goodBlocks[i].position.y > CANVAS_HEIGHT) {\r\n          this.score += 1;\r\n          document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\r\n          goodBlocks[i].position.y = -goodBlocks[i].height;\r\n        }\r\n      }\r\n  \r\n      // check if player steps on bad block\r\n      for (let i = 0; i < badBlocks.length; i++) {\r\n        badBlocks[i].position.y += 1;\r\n        if (this.position.x + this.width > badBlocks[i].position.x \r\n          && this.position.x < badBlocks[i].position.x + badBlocks[i].width\r\n          && Math.abs(this.position.y + this.height - badBlocks[i].position.y) < 15\r\n          && this.gravitySpeed > 0\r\n        ) {\r\n          if (badBlocks[i].hit === 0) {\r\n            badBlocks[i].hit = 1;            \r\n            //badBlocks[i].colour = \"rgb(255, 0, 0)\";\r\n            badBlocks[i].img = badBlocks[i].imgBad;\r\n            let a = new Audio(jumpSFX);\r\n            a.play();\r\n            i = 0;\r\n          }\r\n        }\r\n      }\r\n\r\n      \r\n      // make player fall\r\n      if (this.onPlatform === 0) {\r\n        this.gravitySpeed += this.gravity;\r\n        this.position.y += this.gravitySpeed;\r\n        if (this.gravitySpeed > 0) {\r\n          if (this.position.y > CANVAS_HEIGHT - this.height) { // hit the ground (bottom of screen)\r\n            this.score += 1;\r\n            document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\r\n            this.position.y = CANVAS_HEIGHT-5 - this.height;\r\n            this.gravitySpeed = 0; \r\n            menu.gameState = -1; // game over\r\n            console.log(\"game over\");  \r\n            let backgroundMusic = document.getElementById(\"backgroundMusic\");\r\n            backgroundMusic.pause();    \r\n            let gameOver = document.getElementById(\"gameOverMusic\");\r\n            gameOver.play();\r\n          }\r\n        }        \r\n      } else {\r\n        this.gravitySpeed = 0;\r\n      }\r\n  \r\n      // make bad blocks fall\r\n      for (let i = 0; i < badBlocks.length; i++) {\r\n        if (badBlocks[i].hit !== 0) {\r\n          if (badBlocks[i].hit > 10) {\r\n            badBlocks[i].hit = 10;\r\n          }\r\n          badBlocks[i].position.y += badBlocks[i].hit;\r\n          badBlocks[i].hit += 1;\r\n        }      \r\n        if (badBlocks[i].position.y > CANVAS_HEIGHT) {\r\n          this.score += 1;\r\n          document.getElementById(\"scoreID\").innerHTML = \"Score: \" + this.score;\r\n          badBlocks[i].position.y = -badBlocks[i].height;\r\n          badBlocks[i].hit = 0;\r\n          //badBlocks[i].colour = \"rgb(0, 0, 0)\";\r\n          badBlocks[i].img = badBlocks[i].imgGood;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  moveLeft() {\r\n    this.movement = -this.speed;\r\n    this.image = this.imageLeft;\r\n  }\r\n\r\n  moveRight() {\r\n    this.movement = this.speed;\r\n    this.image = this.imageRight;\r\n  }\r\n\r\n  jump(menu) {    \r\n    if (menu.gameState !== -1) {\r\n      //this.imgSrc = \"img/dora2.png\";\r\n      this.onPlatform = 0;\r\n      if (this.gravitySpeed === 0) { // prevents spamming \r\n        this.gravitySpeed = -8;\r\n        let a = new Audio(fallSFX);\r\n        a.play();\r\n      }\r\n      menu.gameState = 1;\r\n    }    \r\n  }\r\n\r\n  stop() {\r\n    this.movement = 0;\r\n    this.image = this.imageStill;\r\n  }\r\n}\r\n\r\nconst Dora = () => {\r\n  \r\n  let player = \"\";\r\n  let menu = \"\";\r\n  let canvas, ctx = \"\";\r\n  let goodBlocks = [];\r\n  let badBlocks = [];\r\n  let factor = Math.floor(Math.random() * 11) + 2; // 2 - 12\r\n  let backgroundLoaded = 0;\r\n  let lastTime = 0;\r\n\r\n  useEffect(() => { \r\n    //let backgroundMusic = new Audio(\"http://codeskulptor-demos.commondatastorage.googleapis.com/descent/background%20music.mp3\");\r\n    let backgroundMusic = document.getElementById(\"backgroundMusic\");\r\n    backgroundMusic.play();\r\n    backgroundMusic.loop = true;\r\n    console.log(\"beginning v 1.22\");\r\n    document.getElementById(\"headingID\").innerHTML = \"Which numbers are divisible by \" + factor;\r\n    document.getElementById(\"scoreID\").innerHTML = \"Score:\";\r\n    startGame();\r\n    requestAnimationFrame(gameLoop);\r\n  });\r\n\r\n  function startGame() {\r\n    canvas = document.getElementById(\"gameScreen\");\r\n    ctx = canvas.getContext(\"2d\");\r\n    player = new Player();    \r\n    menu = new Menu(); \r\n    player.draw(ctx);\r\n    \r\n    console.log(\"starting\");\r\n    \r\n    let lastBlockX = CANVAS_WIDTH/2;\r\n    let lastBlockY = CANVAS_HEIGHT;\r\n\r\n    for (let block = 0; block < 8; block++) {\r\n      let b = new BlockGood(factor);\r\n      let xVar = Math.floor(Math.random() * 120) + 60;\r\n      if (Math.floor(Math.random() * 10) % 2 === 0) {\r\n        xVar *= -1;\r\n      }\r\n      if (lastBlockX + xVar < 0) {\r\n        lastBlockX -= xVar;\r\n      } else if (lastBlockX + xVar + b.width > CANVAS_WIDTH) {\r\n        lastBlockX -= xVar;\r\n      } else {\r\n        lastBlockX += xVar;\r\n      }\r\n\r\n      let yVar = Math.floor(Math.random() * 30) + 90;\r\n      lastBlockY -= yVar;\r\n      b.position.x = lastBlockX;\r\n      b.position.y = lastBlockY - b.height;\r\n      goodBlocks.push(b)\r\n    }\r\n    \r\n    for (let block = 0; block < 10; block++) {\r\n      let b = new BlockBad(factor);\r\n      b.position.x = Math.floor(Math.random() * (CANVAS_WIDTH - b.width) + 10) + 5;\r\n      b.position.y = Math.floor(Math.random() * (CANVAS_HEIGHT - b.height) - 10) + 5;\r\n      // check blocks do not intersect\r\n      let intersects = 0;\r\n      for (let c = 0; c < goodBlocks.length; c++) {\r\n        if (b.position.x > goodBlocks[c].position.x - goodBlocks[c].width\r\n          && b.position.x < goodBlocks[c].position.x + goodBlocks[c].width\r\n          && b.position.y > goodBlocks[c].position.y - goodBlocks[c].height\r\n          && b.position.y < goodBlocks[c].position.y + goodBlocks[c].height\r\n        ) {\r\n          intersects = 1;\r\n          c = goodBlocks.length;\r\n        }\r\n      }\r\n      if (intersects === 0) {\r\n        for (let c = 0; c < badBlocks.length; c++) {\r\n          if (b.position.x > badBlocks[c].position.x - badBlocks[c].width\r\n            && b.position.x < badBlocks[c].position.x + badBlocks[c].width\r\n            && b.position.y > badBlocks[c].position.y - badBlocks[c].height\r\n            && b.position.y < badBlocks[c].position.y + badBlocks[c].height\r\n          ) {\r\n            intersects = 1;\r\n          }\r\n        }\r\n      }\r\n      if (intersects === 1) {\r\n        block -= 1;\r\n      } else {\r\n        badBlocks.push(b);\r\n      }\r\n    }\r\n  }\r\n\r\n  document.addEventListener(\"keydown\", event => {\r\n    if (player !== \"\") {    \r\n      switch (event.key) {          \r\n        case \"ArrowLeft\":\r\n          player.moveLeft();\r\n          break;\r\n        case \"ArrowRight\":\r\n          player.moveRight();\r\n          break;\r\n        case \" \":\r\n          player.jump(menu);\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n  });\r\n  \r\n  document.addEventListener(\"keyup\", event => {\r\n    if (player !== \"\") {   \r\n      switch (event.key) {\r\n        case \"ArrowLeft\":\r\n          if (player.movement < 0) player.stop();\r\n          break;\r\n        case \"ArrowRight\":\r\n          if (player.movement > 0) player.stop();\r\n          break;\r\n        default:\r\n      }\r\n    }    \r\n  });\r\n  \r\n  \r\n  function gameLoop(timestamp) {\r\n    let deltatime = timestamp - lastTime;\r\n    lastTime = timestamp;\r\n    if (ctx !== \"\") {\r\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n      // load backgrond img\r\n      let background = document.getElementById(\"backgroundImage\");\r\n      if (background) {\r\n        if (backgroundLoaded === 0) {\r\n          background.addEventListener('load', e => {\r\n            if (ctx) {\r\n              ctx.drawImage(background, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n              backgroundLoaded = 1;\r\n            }          \r\n          });\r\n        } else {\r\n          if (ctx) {\r\n            ctx.drawImage(background, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (player !== \"\") {\r\n        player.update(deltatime, goodBlocks, badBlocks, menu);\r\n        player.draw(ctx);\r\n      } \r\n      \r\n      for (let i = 0; i < badBlocks.length; i++) {\r\n        badBlocks[i].draw(ctx);\r\n      }    \r\n      for (let i = 0; i < goodBlocks.length; i++) {\r\n        goodBlocks[i].draw(ctx);\r\n      } \r\n      menu.draw(ctx);\r\n    }\r\n    requestAnimationFrame(gameLoop);\r\n  }\r\n\r\n  function reset() {\r\n    console.log(\"reset\");\r\n    window.location.reload(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Dora\">    \r\n\r\n      <audio id=\"backgroundMusic\" controls src={backgroundMusic}></audio>\r\n      <audio id=\"gameOverMusic\" controls src={gameOverMusic}></audio>\r\n\r\n      <h3 id=\"headingID\">test</h3>\r\n      <h4 id=\"scoreID\">Score:</h4>\r\n      <canvas id=\"gameScreen\" width=\"800\" height=\"800\"></canvas>\r\n      <img id=\"dora1\" src={dora1} style={{display:\"none\"}} alt=\"dora\" height=\"100\" width=\"70\"></img>\r\n      <img id=\"doraRight\" src={doraRight} style={{display:\"none\"}} alt=\"doraRight\" height=\"100\" width=\"70\"></img>\r\n      <img id=\"doraLeft\" src={doraLeft} style={{display:\"none\"}} alt=\"doraLeft\" height=\"100\" width=\"70\"></img>\r\n      <img id=\"floor\" src={floor} style={{display:\"none\"}} alt=\"floor\" ></img>\r\n      <img id=\"floorBad\" src={floorBad} style={{display:\"none\"}} alt=\"floorbad\" ></img>\r\n      <img id=\"backgroundImage\" src={backgroundImage} style={{display:\"none\"}} alt=\"backgroundimage\" ></img>\r\n      <br />\r\n      <button onClick={reset}>Play Again?</button>\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dora;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Flappy from './Flappy';\nimport Dora from './Dora';\n\nconst App = () => {\n  \n  return (\n    <div className=\"App\">    \n      <Switch>\n        <Route path=\"/\" component={Dora} exact/>\n        <Route path=\"/Dora\" component={Dora} />\n        <Route path=\"/Flappy\" component={Flappy} />\n      </Switch>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>  \n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}